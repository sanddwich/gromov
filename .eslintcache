[{"C:\\GitHub\\gromov\\src\\reportWebVitals.ts":"1","C:\\GitHub\\gromov\\src\\Layouts\\AdminLayout\\AdminLayout.tsx":"2","C:\\GitHub\\gromov\\src\\SharedComponents\\SuccessPay\\SuccessPay.tsx":"3","C:\\GitHub\\gromov\\src\\SharedComponents\\IconButton\\IconButton.tsx":"4","C:\\GitHub\\gromov\\src\\Layouts\\MainLayout\\Pages\\Second\\Second.tsx":"5","C:\\GitHub\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Main.tsx":"6","C:\\GitHub\\gromov\\src\\Redux\\actions\\order.tsx":"7","C:\\GitHub\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\QuizPage\\QuizPage.tsx":"8","C:\\GitHub\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block8\\Block8.tsx":"9","C:\\GitHub\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block4\\Block4.tsx":"10","C:\\GitHub\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block10\\Block10.tsx":"11","C:\\GitHub\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\AdditionalServices\\AdditionalServices.tsx":"12","C:\\GitHub\\gromov\\src\\Redux\\reducers\\modal.tsx":"13","C:\\GitHub\\gromov\\src\\SharedComponents\\BottomShadowBlock\\BottomShadowBlock.tsx":"14","C:\\GitHub\\gromov\\src\\SharedComponents\\PriceBlock\\PriceBlock.tsx":"15","C:\\GitHub\\gromov\\src\\SharedComponents\\ExclusiveCard\\ExclusiveCard.tsx":"16","C:\\GitHub\\gromov\\src\\SharedComponents\\PayBlock\\PayBlock.tsx":"17","C:\\GitHub\\gromov\\src\\App.tsx":"18","C:\\GitHub\\gromov\\src\\Redux\\actions\\modal.tsx":"19","C:\\GitHub\\gromov\\src\\SharedComponents\\ModalPayment\\ModalPayment.tsx":"20","C:\\GitHub\\gromov\\src\\Redux\\constants\\ActionTypes.tsx":"21","C:\\GitHub\\gromov\\src\\Layouts\\MainLayout\\MainBody\\MainBody.tsx":"22","C:\\GitHub\\gromov\\src\\Layouts\\AdminLayout\\Pages\\AdminPage\\AdminPage.tsx":"23","C:\\GitHub\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Exclusive\\Exclusive.tsx":"24","C:\\GitHub\\gromov\\src\\SharedComponents\\Button\\Button.tsx":"25","C:\\GitHub\\gromov\\src\\Redux\\reducers\\toast.tsx":"26","C:\\GitHub\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Certificates\\Certificates.tsx":"27","C:\\GitHub\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block5\\Block5.tsx":"28","C:\\GitHub\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block11\\Block11.tsx":"29","C:\\GitHub\\gromov\\src\\SharedComponents\\DashedBorderBlock\\DashedBorderBlock.tsx":"30","C:\\GitHub\\gromov\\src\\SharedComponents\\RoundButton\\RoundButton.tsx":"31","C:\\GitHub\\gromov\\src\\SharedComponents\\MobileMenu\\MobileMenu.tsx":"32","C:\\GitHub\\gromov\\src\\Layouts\\AdminLayout\\Pages\\AdminProfile\\AdminProfile.tsx":"33","C:\\GitHub\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block3\\Block3.tsx":"34","C:\\GitHub\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Achivements\\Achivements.tsx":"35","C:\\GitHub\\gromov\\src\\Redux\\reducers\\order.tsx":"36","C:\\GitHub\\gromov\\src\\SharedComponents\\BeforeAfterBlock\\BeforeAfterBlock.tsx":"37","C:\\GitHub\\gromov\\src\\Redux\\index.tsx":"38","C:\\GitHub\\gromov\\src\\SharedComponents\\GiftModal\\GiftModal.tsx":"39","C:\\GitHub\\gromov\\src\\Layouts\\MainLayout\\MainFooter\\MainFooter.tsx":"40","C:\\GitHub\\gromov\\src\\Config\\Config.tsx":"41","C:\\GitHub\\gromov\\src\\Redux\\reducers\\app.tsx":"42","C:\\GitHub\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block7\\Block7.tsx":"43","C:\\GitHub\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block2\\Block2.tsx":"44","C:\\GitHub\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block1\\Block1.tsx":"45"},{"size":440,"mtime":1612157555007,"results":"46","hashOfConfig":"47"},{"size":1174,"mtime":1612157554867,"results":"48","hashOfConfig":"47"},{"size":4715,"mtime":1617945225881,"results":"49","hashOfConfig":"47"},{"size":1793,"mtime":1612347295152,"results":"50","hashOfConfig":"47"},{"size":379,"mtime":1612157554905,"results":"51","hashOfConfig":"47"},{"size":1603,"mtime":1624966611091,"results":"52","hashOfConfig":"47"},{"size":226,"mtime":1612157554907,"results":"53","hashOfConfig":"47"},{"size":2329,"mtime":1625128044121,"results":"54","hashOfConfig":"47"},{"size":10424,"mtime":1625129846807,"results":"55","hashOfConfig":"47"},{"size":3849,"mtime":1617945225651,"results":"56","hashOfConfig":"47"},{"size":2044,"mtime":1617945225514,"results":"57","hashOfConfig":"47"},{"size":37102,"mtime":1625047811636,"results":"58","hashOfConfig":"47"},{"size":1417,"mtime":1614692479834,"results":"59","hashOfConfig":"47"},{"size":2127,"mtime":1612157554923,"results":"60","hashOfConfig":"47"},{"size":1001,"mtime":1625039479127,"results":"61","hashOfConfig":"47"},{"size":1263,"mtime":1625044223000,"results":"62","hashOfConfig":"47"},{"size":15970,"mtime":1625636336057,"results":"63","hashOfConfig":"47"},{"size":1698,"mtime":1614687968403,"results":"64","hashOfConfig":"47"},{"size":630,"mtime":1614686963222,"results":"65","hashOfConfig":"47"},{"size":1968,"mtime":1613042024466,"results":"66","hashOfConfig":"47"},{"size":722,"mtime":1614686931461,"results":"67","hashOfConfig":"47"},{"size":409,"mtime":1612157554871,"results":"68","hashOfConfig":"47"},{"size":408,"mtime":1612157554868,"results":"69","hashOfConfig":"47"},{"size":4740,"mtime":1625044202418,"results":"70","hashOfConfig":"47"},{"size":443,"mtime":1612157554924,"results":"71","hashOfConfig":"47"},{"size":891,"mtime":1612157554920,"results":"72","hashOfConfig":"47"},{"size":4308,"mtime":1617949245104,"results":"73","hashOfConfig":"47"},{"size":4007,"mtime":1618491012734,"results":"74","hashOfConfig":"47"},{"size":4922,"mtime":1618491012726,"results":"75","hashOfConfig":"47"},{"size":1977,"mtime":1624967362440,"results":"76","hashOfConfig":"47"},{"size":805,"mtime":1612347295155,"results":"77","hashOfConfig":"47"},{"size":5339,"mtime":1625227160612,"results":"78","hashOfConfig":"47"},{"size":496,"mtime":1612157554870,"results":"79","hashOfConfig":"47"},{"size":3360,"mtime":1617945225619,"results":"80","hashOfConfig":"47"},{"size":2842,"mtime":1624941416029,"results":"81","hashOfConfig":"47"},{"size":1567,"mtime":1612157554919,"results":"82","hashOfConfig":"47"},{"size":2255,"mtime":1625129746256,"results":"83","hashOfConfig":"47"},{"size":419,"mtime":1625128044122,"results":"84","hashOfConfig":"47"},{"size":2877,"mtime":1614691634283,"results":"85","hashOfConfig":"47"},{"size":394,"mtime":1612157554872,"results":"86","hashOfConfig":"47"},{"size":10607,"mtime":1625128044115,"results":"87","hashOfConfig":"47"},{"size":753,"mtime":1612157554918,"results":"88","hashOfConfig":"47"},{"size":5874,"mtime":1617945225697,"results":"89","hashOfConfig":"47"},{"size":4225,"mtime":1625128396158,"results":"90","hashOfConfig":"47"},{"size":7102,"mtime":1625128044118,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"4qg5kd",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"94"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"94"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"118"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"94"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"100"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"100"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\GitHub\\gromov\\src\\reportWebVitals.ts",[],["192","193"],"C:\\GitHub\\gromov\\src\\Layouts\\AdminLayout\\AdminLayout.tsx",[],"C:\\GitHub\\gromov\\src\\SharedComponents\\SuccessPay\\SuccessPay.tsx",["194","195"],"import React from 'react'\r\nimport { Container, Row } from 'react-bootstrap'\r\nimport Config from '../../Config/Config'\r\nimport { TinkoffPay } from '../../Interfaces/TinkoffPay'\r\nimport './SuccessPay.scss'\r\n\r\ninterface SuccessPayProps {}\r\n\r\ninterface SuccessPayState {\r\n  loading: boolean\r\n  defaultLink: Link\r\n}\r\n\r\ninterface RequestData {\r\n  TerminalKey: string\r\n  PaymentId: string\r\n  Token: string\r\n}\r\n\r\ninterface OrderData {\r\n  email: string\r\n  phone: string\r\n  PaymentId: string\r\n  Token: string\r\n}\r\n\r\ninterface Link {\r\n  name: string\r\n  url: string\r\n  pass: string\r\n}\r\n\r\nclass SuccessPay extends React.Component<SuccessPayProps, SuccessPayState> {\r\n  constructor(props: SuccessPayProps) {\r\n    super(props)\r\n    this.state = {\r\n      loading: true,\r\n      defaultLink: {\r\n        name: '',\r\n        pass: '',\r\n        url: '',\r\n      },\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const storage = localStorage.getItem('payment')\r\n\r\n    if (storage) {\r\n      const payment: TinkoffPay = JSON.parse(storage)\r\n\r\n      this.orderRequest(payment)\r\n    } else {\r\n      // alert(Config.FailURL)\r\n      window.open(Config.FailURL, '_self')\r\n    }\r\n  }\r\n\r\n  orderRequest = async (payment: TinkoffPay): Promise<any> => {\r\n    const url: string = 'https://securepay.tinkoff.ru/v2/Init'\r\n    const headers = {\r\n      'Content-Type': 'application/json',\r\n    }\r\n\r\n    // console.log(payment)\r\n\r\n    try {\r\n      const res = await fetch(url, {\r\n        method: 'POST',\r\n        headers,\r\n        body: JSON.stringify(payment),\r\n      })\r\n\r\n      const requestResult = await res.json()\r\n\r\n      // console.log(requestResult)\r\n\r\n      localStorage.removeItem('payment')\r\n\r\n      if (!requestResult.Success && requestResult.ErrorCode === '8') {\r\n        try {\r\n          const link: Link =\r\n            Config.links.find((link) => link.name === (payment.Receipt ? payment.Receipt.Items[0].Name : '')) ||\r\n            this.state.defaultLink\r\n\r\n          const formData = {\r\n            email: payment.Receipt?.Email,\r\n            phone: payment.Receipt?.Phone,\r\n            name: payment.Description,\r\n            gromovMail: Config.gromovMail,\r\n            pass: link.pass,\r\n            url: link.url,\r\n            siteURL: Config.siteURL,\r\n          }\r\n\r\n          // console.log(formData)\r\n\r\n          const mailUrl: string = '/api/index.php'\r\n\r\n          const mailRes = await fetch(mailUrl, {\r\n            method: 'POST',\r\n            body: JSON.stringify(formData),\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Content-Length': formData.toString().length.toString(),\r\n            },\r\n          })\r\n\r\n          const mailRequestResult = await mailRes.json()\r\n\r\n          console.log(mailRequestResult)\r\n\r\n          if (mailRequestResult !== 'error') {\r\n            console.log('SUCCESS')\r\n          } else {\r\n            console.log('ERROR')\r\n            window.open(Config.FailURL, '_self')\r\n          }\r\n\r\n          this.setState({ loading: false })\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      } else {\r\n        window.open(Config.FailURL, '_self')\r\n      }\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid className=\"SuccessPay p-5 d-flex justify-content-center align-items-center\">\r\n        {this.state.loading ? (\r\n          <div className=\"SuccessPay__loading\">\r\n            <div className=\"lds-ellipsis\">\r\n              <div></div>\r\n              <div></div>\r\n              <div></div>\r\n              <div></div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"SuccessPay__content\">\r\n            <Row className=\"SuccessPay__img m-0 d-flex justify-content-center\">\r\n              <img className=\"img-fluid\" src=\"/img/success.png\" alt=\"\" />\r\n            </Row>\r\n            <Row className=\"SuccessPay__text m-0 pt-5 d-flex justify-content-center\">\r\n              <h3 className=\"text-success text-center\">\r\n                Оплата прошла успешно! Благодарю за покупку! На указанный вами E-mail придет информационное письмо по\r\n                приобретаемому продукту.\r\n              </h3>\r\n              <h3 className=\"text-danger text-center\">Если письмо не попало в почтовый ящик, проверьте папку \"СПАМ\"</h3>\r\n            </Row>\r\n            <Row className=\"SuccessPay__siteLink d-flex justify-content-center pt-3\">\r\n              <a href={`${Config.siteURL}`}>Перейти на сайт</a>\r\n            </Row>\r\n          </div>\r\n        )}\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SuccessPay\r\n",["196","197"],"C:\\GitHub\\gromov\\src\\SharedComponents\\IconButton\\IconButton.tsx",["198","199"],"import React from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\nimport './IconButton.scss'\r\n\r\ninterface IconButtonProps {\r\n  width?: string\r\n  height?: string\r\n  icon: string\r\n  textColor: string\r\n  text: string\r\n  bgColor?: string\r\n  shadow?: string\r\n  bold?: any\r\n  borderRadius?: string\r\n  element: number\r\n  clickHandler: (element: number) => void\r\n}\r\n\r\ninterface IconButtonState {}\r\n\r\nclass IconButton extends React.Component<IconButtonProps, IconButtonState> {\r\n  render() {\r\n    return (\r\n      <Container\r\n        fluid\r\n        className=\"IconButton p-0 d-flex justify-content-center align-items-center\"\r\n        style={{\r\n          width: this.props.width ? this.props.width : '',\r\n          height: this.props.height ? this.props.height : '',\r\n          backgroundColor: this.props.bgColor ? this.props.bgColor : '#ffffff',\r\n          boxShadow: this.props.shadow ? this.props.shadow : 'none',\r\n          borderRadius: this.props.borderRadius ? this.props.borderRadius : '0px',\r\n        }}\r\n        onClick={() => this.props.clickHandler(this.props.element)}\r\n      >\r\n          <div className=\"p-4 m-0 d-flex align-items-center justify-content-center\">\r\n            <div className=\"m-0 p-0 pr-2 d-flex align-items-center justify-content-center\">\r\n              <img className=\"img-fluid\" src={this.props.icon} alt=\"\" />\r\n            </div>\r\n            <div\r\n              className=\"IconButton__text m-0 p-0 d-flex align-items-center justify-content-start\"\r\n              style={{\r\n                color: this.props.textColor,\r\n                fontWeight: this.props.bold ? 'bold' : 'normal',\r\n              }}\r\n            >\r\n              {this.props.text}\r\n            </div>\r\n          </div>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default IconButton\r\n","C:\\GitHub\\gromov\\src\\Layouts\\MainLayout\\Pages\\Second\\Second.tsx",[],"C:\\GitHub\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Main.tsx",["200"],"C:\\GitHub\\gromov\\src\\Redux\\actions\\order.tsx",[],"C:\\GitHub\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\QuizPage\\QuizPage.tsx",[],"C:\\GitHub\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block8\\Block8.tsx",[],"C:\\GitHub\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block4\\Block4.tsx",[],"C:\\GitHub\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block10\\Block10.tsx",[],["201","202"],"C:\\GitHub\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\AdditionalServices\\AdditionalServices.tsx",["203"],"import React from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\nimport Button from '../../../../../SharedComponents/Button/Button'\r\nimport DashedBorderBlock from '../../../../../SharedComponents/DashedBorderBlock/DashedBorderBlock'\r\nimport PriceBlock from '../../../../../SharedComponents/PriceBlock/PriceBlock'\r\nimport RoundButton from '../../../../../SharedComponents/RoundButton/RoundButton'\r\nimport './AdditionalServices.scss'\r\nimport { Element } from 'react-scroll'\r\nimport { TinkoffPay } from '../../../../../Interfaces/TinkoffPay'\r\nimport { connect } from 'react-redux'\r\nimport { RootState } from '../../../../../Redux'\r\nimport { setOrderPayment } from '../../../../../Redux/actions/order'\r\nimport { OrderState } from '../../../../../Redux/interfaces/interfaces'\r\nimport { Items } from '../../../../../Interfaces/Items'\r\nimport Config from '../../../../../Config/Config'\r\nimport { setShowPaymentModal } from '../../../../../Redux/actions/modal'\r\nimport { Program } from '../../../../../Interfaces/Program'\r\n\r\ninterface AdditionalServicesProps {\r\n  setShowPaymentModal: (isActive: boolean) => void\r\n  setOrderPayment: (payment: TinkoffPay) => void\r\n  order: OrderState\r\n}\r\n\r\ninterface AdditionalServicesState {\r\n  messangers: string[]\r\n  programs: Program[]\r\n}\r\n\r\nclass AdditionalServices extends React.Component<AdditionalServicesProps, AdditionalServicesState> {\r\n  constructor(props: AdditionalServicesProps) {\r\n    super(props)\r\n    this.state = {\r\n      messangers: ['https://www.instagram.com/victor__gromov/', 'https://api.whatsapp.com/send?phone=+79171874086'],\r\n      programs: Config.programs,\r\n    }\r\n  }\r\n\r\n  onClickHandler = (element: number): void => {\r\n    if (this.state.messangers[element]) {\r\n      window.open(this.state.messangers[element])\r\n    }\r\n  }\r\n\r\n  checkMale = (program: number, val: boolean): void => {\r\n    const programs = this.state.programs\r\n    programs[program].male = val\r\n    this.setState({ programs })\r\n  }\r\n\r\n  setPropertySelectActive = (program: number, val: boolean): void => {\r\n    const programs = this.state.programs\r\n    programs[program].propertiesSelectActive = val\r\n    this.setState({ programs })\r\n  }\r\n\r\n  setPropertySelectActive2 = (program: number, val: boolean): void => {\r\n    const programs = this.state.programs\r\n    programs[program].propertiesSelectActive2 = val\r\n    this.setState({ programs })\r\n  }\r\n\r\n  setProp = (program: number, id: number): void => {\r\n    const programs = this.state.programs\r\n    programs[program].activeProperty = id\r\n    this.setState({ programs })\r\n\r\n    this.setPropertySelectActive(program, false)\r\n  }\r\n  \r\n  setProp2 = (program: number, id: number): void => {\r\n    const programs = this.state.programs\r\n    programs[program].activeProperty2 = id\r\n    this.setState({ programs })\r\n\r\n    this.setPropertySelectActive2(program, false)\r\n  }\r\n\r\n  toggleProperties = (program: number): void => {\r\n    const programs = this.state.programs\r\n    programs[program].propertiesSelectActive = !programs[program].propertiesSelectActive\r\n    this.setState({ programs })\r\n  }\r\n  \r\n  toggleProperties2 = (program: number): void => {\r\n    const programs = this.state.programs\r\n    programs[program].propertiesSelectActive2 = !programs[program].propertiesSelectActive2\r\n    this.setState({ programs })\r\n  }\r\n\r\n  buyProgramBytton = (programId: number): void => {\r\n    const program: Program = this.state.programs[programId]\r\n    // Items Массив позиций чека с информацией о товарах.\r\n    const payment = this.props.order.payment\r\n\r\n    let name = `${typeof program.male !== 'undefined' ? (program.male ? 'Мужская ' : 'Женская ') : ''}${\r\n      program.properties && typeof program.activeProperty === 'number'\r\n        ? program.properties[program.activeProperty]\r\n        : program.name\r\n    }`\r\n\r\n    if (programId === 7 || programId === 8) {\r\n      name = 'Комплексная ' + name\r\n    } \r\n\r\n    const ItemsArray: Items[] = [\r\n      {\r\n        Amount: program.price * 100,\r\n        Name: name,\r\n        Price: program.price * 100,\r\n        Quantity: 1,\r\n        Tax: Config.Tax,\r\n      },\r\n    ]\r\n\r\n    if (payment.Receipt) payment.Receipt.Items = ItemsArray\r\n    payment.Amount = program.price * 100\r\n    // payment.Description = `${program.name} / ${ItemsArray.map(item => item.Name + ' / ')}`\r\n    payment.Description = program.name\r\n    payment.OrderId = new Date().valueOf().toString()\r\n\r\n    this.props.setOrderPayment(payment)\r\n    this.props.setShowPaymentModal(true)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Element name=\"AdditionalServices\">\r\n        <div className=\"AdditionalServices container-lg p-0 m-md-auto m-0\">\r\n          <div className=\"row m-0 p-0\">\r\n            <div className=\"col-lg-6 m-0 p-0\">\r\n              <div className=\"AdditionalServices__card gray\">\r\n                <h2>{this.state.programs[0].name}</h2>\r\n                <p>Отдельная услуга</p>\r\n                <DashedBorderBlock\r\n                  bgColor=\"#ffffff\"\r\n                  border=\"1px dashed #058DC7\"\r\n                  color=\"#313131\"\r\n                  width=\"100%\"\r\n                  pluses={false}\r\n                  padding=\"15px 0\"\r\n                >\r\n                  <div className=\"AdditionalServices__cardCont d-flex align-items-center\">\r\n                    <img className=\"img-fluid\" src=\"/img/icons/1.png\" alt=\"\" />\r\n                    Содержит список упражнений для занятий дома, на улице, в тренажёрном зале.\r\n                  </div>\r\n                </DashedBorderBlock>\r\n                <DashedBorderBlock\r\n                  bgColor=\"#ffffff\"\r\n                  border=\"1px dashed #058DC7\"\r\n                  color=\"#313131\"\r\n                  width=\"100%\"\r\n                  pluses={false}\r\n                  padding=\"15px 0\"\r\n                >\r\n                  <div className=\"AdditionalServices__cardCont d-flex align-items-center\">\r\n                    <img className=\"img-fluid\" src=\"/img/icons/2.png\" alt=\"\" />\r\n                    Безопасна и экономит ваше время.\r\n                  </div>\r\n                </DashedBorderBlock>\r\n                <DashedBorderBlock\r\n                  bgColor=\"#ffffff\"\r\n                  border=\"1px dashed #058DC7\"\r\n                  color=\"#313131\"\r\n                  width=\"100%\"\r\n                  pluses={false}\r\n                  padding=\"15px 0\"\r\n                >\r\n                  <div className=\"AdditionalServices__cardCont d-flex align-items-center\">\r\n                    <img className=\"img-fluid\" src=\"/img/icons/3.png\" alt=\"\" />\r\n                    Универсальна (без учета индивидуальных параметров).\r\n                  </div>\r\n                </DashedBorderBlock>\r\n\r\n                <Container className=\"AdditionalServices__propsCont p-0\">\r\n                  <Row className=\"AdditionalServices__sex m-0 d-flex justify-content-around\">\r\n                    <div\r\n                      className=\"AdditionalServices__sexType d-flex align-items-center\"\r\n                      onClick={() => this.checkMale(0, true)}\r\n                    >\r\n                      <img\r\n                        src={`${this.state.programs[0].male ? '/img/radio__true.svg' : '/img/radio__false.svg'}`}\r\n                        alt=\"\"\r\n                      />\r\n                      <span>Мужчине</span>\r\n                    </div>\r\n                    <div\r\n                      className=\"AdditionalServices__sexType d-flex align-items-center\"\r\n                      onClick={() => this.checkMale(0, false)}\r\n                    >\r\n                      <img\r\n                        src={`${this.state.programs[0].male ? '/img/radio__false.svg' : '/img/radio__true.svg'}`}\r\n                        alt=\"\"\r\n                      />\r\n                      <span>Женщине</span>\r\n                    </div>\r\n                  </Row>\r\n                  <Row className=\"AdditionalServices__select m-0\">\r\n                    <Container fluid className=\"AdditionalServices__styledSelect p-0\">\r\n                      <Row\r\n                        className=\"m-0 mb-2 d-flex justify-content-between\"\r\n                        onClick={() => {\r\n                          this.toggleProperties(0)\r\n                        }}\r\n                      >\r\n                        <Col xs={9} className=\"AdditionalServices__selectValue p-0 d-flex align-items-center\">\r\n                          {this.state.programs[0].properties\r\n                            ? this.state.programs[0].properties[\r\n                                this.state.programs[0].activeProperty ? this.state.programs[0].activeProperty : 0\r\n                              ]\r\n                            : ''}\r\n                        </Col>\r\n                        <Col\r\n                          xs={3}\r\n                          className=\"AdditionalServices__selectArrow p-0 d-flex align-items-center justify-content-end\"\r\n                        >\r\n                          <img className=\"img-fluid\" src=\"/img/select__arrow.svg\" alt=\"\" />\r\n                        </Col>\r\n                      </Row>\r\n\r\n                      {this.state.programs[0].propertiesSelectActive ? (\r\n                        <Row className=\"AdditionalServices__selectOptions m-0\">\r\n                          {this.state.programs[0].properties?.map((prop, index) => {\r\n                            return (\r\n                              <Container\r\n                                fluid\r\n                                className=\"AdditionalServices__selectOption p-0\"\r\n                                key={index}\r\n                                onClick={() => this.setProp(0, index)}\r\n                              >\r\n                                {prop}\r\n                              </Container>\r\n                            )\r\n                          })}\r\n                        </Row>\r\n                      ) : null}\r\n                    </Container>\r\n                  </Row>\r\n                </Container>\r\n\r\n                <PriceBlock theme=\"light\" price={this.state.programs[0].price + ' р'} />\r\n                <Button text=\"Купить сейчас\" buttonHandler={() => this.buyProgramBytton(0)} />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-6 m-0 p-0\">\r\n              <div className=\"AdditionalServices__card gray\">\r\n                <h2>«базовое питание»</h2>\r\n                <p>Отдельная услуга</p>\r\n                <DashedBorderBlock\r\n                  bgColor=\"#ffffff\"\r\n                  border=\"1px dashed #058DC7\"\r\n                  color=\"#313131\"\r\n                  width=\"100%\"\r\n                  pluses={false}\r\n                  padding=\"15px 0\"\r\n                >\r\n                  <div className=\"AdditionalServices__cardCont d-flex align-items-center\">\r\n                    <img className=\"img-fluid\" src=\"/img/icons/4.png\" alt=\"\" />\r\n                    Включает в себя базовые принципы правильного питания.\r\n                  </div>\r\n                </DashedBorderBlock>\r\n                <DashedBorderBlock\r\n                  bgColor=\"#ffffff\"\r\n                  border=\"1px dashed #058DC7\"\r\n                  color=\"#313131\"\r\n                  width=\"100%\"\r\n                  pluses={false}\r\n                  padding=\"15px 0\"\r\n                >\r\n                  <div className=\"AdditionalServices__cardCont d-flex align-items-center\">\r\n                    <img className=\"img-fluid\" src=\"/img/icons/5.png\" alt=\"\" />\r\n                    Не является диетой, но заключает в себе важные правила благодаря которым вы сможете самостоятельно\r\n                    составить свой рацион для определенных целей.\r\n                  </div>\r\n                </DashedBorderBlock>\r\n                <DashedBorderBlock\r\n                  bgColor=\"#ffffff\"\r\n                  border=\"1px dashed #058DC7\"\r\n                  color=\"#313131\"\r\n                  width=\"100%\"\r\n                  pluses={false}\r\n                  padding=\"15px 0\"\r\n                >\r\n                  <div className=\"AdditionalServices__cardCont d-flex align-items-center\">\r\n                    <img className=\"img-fluid\" src=\"/img/icons/6.png\" alt=\"\" />\r\n                    Содержит конкретные примеры блюд и сочетания продуктов в рационе.\r\n                  </div>\r\n                </DashedBorderBlock>\r\n                <DashedBorderBlock\r\n                  bgColor=\"#ffffff\"\r\n                  border=\"1px dashed #058DC7\"\r\n                  color=\"#313131\"\r\n                  width=\"100%\"\r\n                  pluses={false}\r\n                  padding=\"15px 0\"\r\n                >\r\n                  <div className=\"AdditionalServices__cardCont d-flex align-items-center\">\r\n                    <img className=\"img-fluid\" src=\"/img/icons/7.png\" alt=\"\" />\r\n                    Универсальна (без учета индивидуальных параметров).\r\n                  </div>\r\n                </DashedBorderBlock>\r\n\r\n                <Container className=\"AdditionalServices__propsCont p-0\">\r\n                  <Row className=\"AdditionalServices__select m-0\">\r\n                    <Container fluid className=\"AdditionalServices__styledSelect p-0\">\r\n                      <Row\r\n                        className=\"m-0 mb-2 d-flex justify-content-between\"\r\n                        onClick={() => {\r\n                          this.toggleProperties(2)\r\n                        }}\r\n                      >\r\n                        <Col xs={9} className=\"AdditionalServices__selectValue p-0 d-flex align-items-center\">\r\n                          {this.state.programs[2].properties\r\n                            ? this.state.programs[2].properties[\r\n                                this.state.programs[2].activeProperty ? this.state.programs[2].activeProperty : 0\r\n                              ]\r\n                            : ''}\r\n                        </Col>\r\n                        <Col\r\n                          xs={3}\r\n                          className=\"AdditionalServices__selectArrow p-0 d-flex align-items-center justify-content-end\"\r\n                        >\r\n                          <img className=\"img-fluid\" src=\"/img/select__arrow.svg\" alt=\"\" />\r\n                        </Col>\r\n                      </Row>\r\n\r\n                      {this.state.programs[2].propertiesSelectActive ? (\r\n                        <Row className=\"AdditionalServices__selectOptions m-0\">\r\n                          {this.state.programs[2].properties?.map((prop, index) => {\r\n                            return (\r\n                              <Container\r\n                                fluid\r\n                                className=\"AdditionalServices__selectOption p-0\"\r\n                                key={index}\r\n                                onClick={() => this.setProp(2, index)}\r\n                              >\r\n                                {prop}\r\n                              </Container>\r\n                            )\r\n                          })}\r\n                        </Row>\r\n                      ) : null}\r\n                    </Container>\r\n                  </Row>\r\n                </Container>\r\n\r\n                <PriceBlock theme=\"light\" price={this.state.programs[2].price + ' р'} />\r\n                <Button text=\"Купить сейчас\" buttonHandler={() => this.buyProgramBytton(2)} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <Container fluid className=\"DoubleCard\">\r\n            <Row className=\"DoubleCard__Row m-0\">\r\n              <Col lg={6} className=\"DoubleCard__Col p-0 d-flex align-items-center\">\r\n                <div className=\"DoubleCard__title\">\r\n                  <h1>«База: Тренировки и питание»</h1>\r\n                  <h3>Комбо</h3>\r\n                  <p>Содержит в себе все из курсов «базовая тренировочная программа» и «базовое питание»</p>\r\n                </div>\r\n              </Col>\r\n              <Col lg={6} className=\"DoubleCard__Col\">\r\n                <Container className=\"AdditionalServices__propsCont  p-0\">\r\n                  <Row className=\"AdditionalServices__sex m-0 d-flex justify-content-around\">\r\n                    <div\r\n                      className=\"AdditionalServices__sexType d-flex align-items-center\"\r\n                      onClick={() => this.checkMale(7, true)}\r\n                    >\r\n                      <img\r\n                        src={`${this.state.programs[7].male ? '/img/radio__true.svg' : '/img/radio__false.svg'}`}\r\n                        alt=\"\"\r\n                      />\r\n                      <span>Мужчине</span>\r\n                    </div>\r\n                    <div\r\n                      className=\"AdditionalServices__sexType d-flex align-items-center\"\r\n                      onClick={() => this.checkMale(7, false)}\r\n                    >\r\n                      <img\r\n                        src={`${this.state.programs[7].male ? '/img/radio__false.svg' : '/img/radio__true.svg'}`}\r\n                        alt=\"\"\r\n                      />\r\n                      <span>Женщине</span>\r\n                    </div>\r\n                  </Row>\r\n                  <Row className=\"AdditionalServices__select m-0\">\r\n                    <Container fluid className=\"AdditionalServices__styledSelect p-0\">\r\n                      <Row\r\n                        className=\"m-0 mb-2 d-flex justify-content-between\"\r\n                        onClick={() => {\r\n                          this.toggleProperties(7)\r\n                        }}\r\n                      >\r\n                        <Col xs={9} className=\"AdditionalServices__selectValue p-0 d-flex align-items-center\">\r\n                          {this.state.programs[7].properties\r\n                            ? this.state.programs[7].properties[\r\n                                this.state.programs[7].activeProperty ? this.state.programs[7].activeProperty : 0\r\n                              ]\r\n                            : ''}\r\n                        </Col>\r\n                        <Col\r\n                          xs={3}\r\n                          className=\"AdditionalServices__selectArrow p-0 d-flex align-items-center justify-content-end\"\r\n                        >\r\n                          <img className=\"img-fluid\" src=\"/img/select__arrow.svg\" alt=\"\" />\r\n                        </Col>\r\n                      </Row>\r\n\r\n                      {this.state.programs[7].propertiesSelectActive ? (\r\n                        <Row className=\"AdditionalServices__selectOptions m-0\">\r\n                          {this.state.programs[7].properties?.map((prop, index) => {\r\n                            return (\r\n                              <Container\r\n                                fluid\r\n                                className=\"AdditionalServices__selectOption p-0\"\r\n                                key={index}\r\n                                onClick={() => this.setProp(7, index)}\r\n                              >\r\n                                {prop}\r\n                              </Container>\r\n                            )\r\n                          })}\r\n                        </Row>\r\n                      ) : null}\r\n                    </Container>\r\n                  </Row>\r\n                  {/* <Row className=\"AdditionalServices__select m-0\">\r\n                    <Container fluid className=\"AdditionalServices__styledSelect p-0\">\r\n                      <Row\r\n                        className=\"m-0 mb-2 d-flex justify-content-between\"\r\n                        onClick={() => {\r\n                          this.toggleProperties2(7)\r\n                        }}\r\n                      >\r\n                        <Col xs={9} className=\"AdditionalServices__selectValue p-0 d-flex align-items-center\">\r\n                          {this.state.programs[7].properties2\r\n                            ? this.state.programs[7].properties2[\r\n                                this.state.programs[7].activeProperty2 ? this.state.programs[7].activeProperty2 : 0\r\n                              ]\r\n                            : ''}\r\n                        </Col>\r\n                        <Col\r\n                          xs={3}\r\n                          className=\"AdditionalServices__selectArrow p-0 d-flex align-items-center justify-content-end\"\r\n                        >\r\n                          <img className=\"img-fluid\" src=\"/img/select__arrow.svg\" alt=\"\" />\r\n                        </Col>\r\n                      </Row>\r\n\r\n                      {this.state.programs[7].propertiesSelectActive2 ? (\r\n                        <Row className=\"AdditionalServices__selectOptions m-0\">\r\n                          {this.state.programs[7].properties2?.map((prop, index) => {\r\n                            return (\r\n                              <Container\r\n                                fluid\r\n                                className=\"AdditionalServices__selectOption p-0\"\r\n                                key={index}\r\n                                onClick={() => this.setProp2(7, index)}\r\n                              >\r\n                                {prop}\r\n                              </Container>\r\n                            )\r\n                          })}\r\n                        </Row>\r\n                      ) : null}\r\n                    </Container>\r\n                  </Row> */}\r\n                </Container>\r\n                <PriceBlock theme=\"light\" oldPrice={this.state.programs[7].oldPrice + ' р'} price={this.state.programs[7].price + ' р'} />\r\n                <Button text=\"Купить сейчас\" buttonHandler={() => this.buyProgramBytton(7)} />\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n\r\n          <div className=\"row m-0 p-0\">\r\n            <div className=\"col-lg-6 m-0 p-0\">\r\n              <div className=\"AdditionalServices__card blue\">\r\n                <h2 style={{ color: '#ffffff' }}>«персональная тренировочная программа»</h2>\r\n                <p>Отдельная услуга</p>\r\n                <DashedBorderBlock\r\n                  bgColor=\"#00A4E9\"\r\n                  border=\"1px dashed #FFFFFF\"\r\n                  color=\"#ffffff\"\r\n                  width=\"100%\"\r\n                  pluses={false}\r\n                  padding=\"15px 0\"\r\n                >\r\n                  <div className=\"AdditionalServices__cardCont d-flex align-items-center\">\r\n                    <img className=\"img-fluid\" src=\"/img/icons/8.png\" alt=\"\" />\r\n                    Составляется с учётом индивидуальных параметров и пожеланий.\r\n                  </div>\r\n                </DashedBorderBlock>\r\n\r\n                <DashedBorderBlock\r\n                  bgColor=\"#00A4E9\"\r\n                  border=\"1px dashed #FFFFFF\"\r\n                  color=\"#ffffff\"\r\n                  width=\"100%\"\r\n                  pluses={false}\r\n                  padding=\"15px 0\"\r\n                >\r\n                  <div className=\"AdditionalServices__cardCont d-flex align-items-center\">\r\n                    <img className=\"img-fluid\" src=\"/img/icons/9.png\" alt=\"\" />\r\n                    Учитывает ваш ритм жизни, факторы занятости и медицинские показатели.\r\n                  </div>\r\n                </DashedBorderBlock>\r\n\r\n                <DashedBorderBlock\r\n                  bgColor=\"#00A4E9\"\r\n                  border=\"1px dashed #FFFFFF\"\r\n                  color=\"#ffffff\"\r\n                  width=\"100%\"\r\n                  pluses={false}\r\n                  padding=\"15px 0\"\r\n                >\r\n                  <div className=\"AdditionalServices__cardCont d-flex align-items-center\">\r\n                    <img className=\"img-fluid\" src=\"/img/icons/10.png\" alt=\"\" />\r\n                    Подходит для тренировок дома, на улице, в тренажерном зале.\r\n                  </div>\r\n                </DashedBorderBlock>\r\n\r\n                <DashedBorderBlock\r\n                  bgColor=\"#00A4E9\"\r\n                  border=\"1px dashed #FFFFFF\"\r\n                  color=\"#ffffff\"\r\n                  width=\"100%\"\r\n                  pluses={false}\r\n                  padding=\"15px 0\"\r\n                >\r\n                  <div className=\"AdditionalServices__cardCont d-flex align-items-center\">\r\n                    <img className=\"img-fluid\" src=\"/img/icons/11.png\" alt=\"\" />\r\n                    Включает в себя консультацию по телефону или видеосвязи.\r\n                  </div>\r\n                </DashedBorderBlock>\r\n\r\n                <DashedBorderBlock\r\n                  bgColor=\"#00A4E9\"\r\n                  border=\"1px dashed #FFFFFF\"\r\n                  color=\"#ffffff\"\r\n                  width=\"100%\"\r\n                  pluses={false}\r\n                  padding=\"15px 0\"\r\n                >\r\n                  <div className=\"AdditionalServices__cardCont d-flex align-items-center\">\r\n                    <img className=\"img-fluid\" src=\"/img/icons/12.png\" alt=\"\" />\r\n                    Содержит видеоинструкцию с техникой выполнения для каждого упражнения.\r\n                  </div>\r\n                </DashedBorderBlock>\r\n\r\n                <PriceBlock theme=\"dark\" price={this.state.programs[1].price + ' р'} />\r\n                <Button text=\"Купить сейчас\" buttonHandler={() => this.buyProgramBytton(1)} />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-6 m-0 p-0\">\r\n              <div className=\"AdditionalServices__card blue\">\r\n                <h2 style={{ color: '#ffffff' }}>Культура питания «персонально»</h2>\r\n                <p>Отдельная услуга</p>\r\n                <DashedBorderBlock\r\n                  bgColor=\"#00A4E9\"\r\n                  border=\"1px dashed #FFFFFF\"\r\n                  color=\"#ffffff\"\r\n                  width=\"100%\"\r\n                  pluses={false}\r\n                  padding=\"15px 0\"\r\n                >\r\n                  <div className=\"AdditionalServices__cardCont d-flex align-items-center\">\r\n                    <img className=\"img-fluid\" src=\"/img/icons/13.png\" alt=\"\" />\r\n                    Содержит базовые принципы правильного питания.\r\n                  </div>\r\n                </DashedBorderBlock>\r\n\r\n                <DashedBorderBlock\r\n                  bgColor=\"#00A4E9\"\r\n                  border=\"1px dashed #FFFFFF\"\r\n                  color=\"#ffffff\"\r\n                  width=\"100%\"\r\n                  pluses={false}\r\n                  padding=\"15px 0\"\r\n                >\r\n                  <div className=\"AdditionalServices__cardCont d-flex align-items-center\">\r\n                    <img className=\"img-fluid\" src=\"/img/icons/14.png\" alt=\"\" />\r\n                    Учитывает ваш график приема пищи и любые пищевые ограничения.\r\n                  </div>\r\n                </DashedBorderBlock>\r\n\r\n                <DashedBorderBlock\r\n                  bgColor=\"#00A4E9\"\r\n                  border=\"1px dashed #FFFFFF\"\r\n                  color=\"#ffffff\"\r\n                  width=\"100%\"\r\n                  pluses={false}\r\n                  padding=\"15px 0\"\r\n                >\r\n                  <div className=\"AdditionalServices__cardCont d-flex align-items-center\">\r\n                    <img className=\"img-fluid\" src=\"/img/icons/15.png\" alt=\"\" />\r\n                    Предполагает сбор информации о вашем рационе, в специальной форме.\r\n                  </div>\r\n                </DashedBorderBlock>\r\n\r\n                <DashedBorderBlock\r\n                  bgColor=\"#00A4E9\"\r\n                  border=\"1px dashed #FFFFFF\"\r\n                  color=\"#ffffff\"\r\n                  width=\"100%\"\r\n                  pluses={false}\r\n                  padding=\"15px 0\"\r\n                >\r\n                  <div className=\"AdditionalServices__cardCont d-flex align-items-center\">\r\n                    <img className=\"img-fluid\" src=\"/img/icons/16.png\" alt=\"\" />\r\n                    Индивидуальная программа составляется в течение одной-двух недель.\r\n                  </div>\r\n                </DashedBorderBlock>\r\n\r\n                <DashedBorderBlock\r\n                  bgColor=\"#00A4E9\"\r\n                  border=\"1px dashed #FFFFFF\"\r\n                  color=\"#ffffff\"\r\n                  width=\"100%\"\r\n                  pluses={false}\r\n                  padding=\"15px 0\"\r\n                >\r\n                  <div className=\"AdditionalServices__cardCont d-flex align-items-center\">\r\n                    <img className=\"img-fluid\" src=\"/img/icons/17.png\" alt=\"\" />\r\n                    Формируется исходя из вашего рациона, и потому наиболее эффективна.\r\n                  </div>\r\n                </DashedBorderBlock>\r\n\r\n                <DashedBorderBlock\r\n                  bgColor=\"#00A4E9\"\r\n                  border=\"1px dashed #FFFFFF\"\r\n                  color=\"#ffffff\"\r\n                  width=\"100%\"\r\n                  pluses={false}\r\n                  padding=\"15px 0\"\r\n                >\r\n                  <div className=\"AdditionalServices__cardCont d-flex align-items-center\">\r\n                    <img className=\"img-fluid\" src=\"/img/icons/18.png\" alt=\"\" />В качестве бонуса включает в себя файл с\r\n                    базовыми принципами питания, удачными сочетаниями пррдуктов, примерами конкретных блюд.\r\n                  </div>\r\n                </DashedBorderBlock>\r\n\r\n                <PriceBlock theme=\"dark\" price={this.state.programs[3].price + ' р'} />\r\n                <Button text=\"Купить сейчас\" buttonHandler={() => this.buyProgramBytton(3)} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <Container fluid className=\"DoubleCard\">\r\n            <Row className=\"DoubleCard__Row m-0\" style={{backgroundColor: '#058DC7'}}>\r\n              <Col lg={6} className=\"DoubleCard__Col p-0 d-flex align-items-center\">\r\n                <div className=\"DoubleCard__title\">\r\n                  <h1 style={{color: '#ffffff'}}>«Персонально: Тренировки и питание»</h1>\r\n                  <h3 style={{color: '#ffffff'}}>Комбо</h3>\r\n                  <p style={{color: '#ffffff'}}>Содержит в себе все из курсов «базовая тренировочная программа» и «базовое питание»</p>\r\n                </div>\r\n              </Col>\r\n              <Col lg={6} className=\"DoubleCard__Col\">\r\n                <Container className=\"AdditionalServices__propsCont  p-0\">\r\n                  <Row className=\"AdditionalServices__sex m-0 d-flex justify-content-around\">\r\n                    <div\r\n                      className=\"AdditionalServices__sexType d-flex align-items-center\"\r\n                      onClick={() => this.checkMale(8, true)}\r\n                    >\r\n                      <img\r\n                        src={`${this.state.programs[8].male ? '/img/radio__true.svg' : '/img/radio__false.svg'}`}\r\n                        alt=\"\"\r\n                      />\r\n                      <span>Мужчине</span>\r\n                    </div>\r\n                    <div\r\n                      className=\"AdditionalServices__sexType d-flex align-items-center\"\r\n                      onClick={() => this.checkMale(8, false)}\r\n                    >\r\n                      <img\r\n                        src={`${this.state.programs[8].male ? '/img/radio__false.svg' : '/img/radio__true.svg'}`}\r\n                        alt=\"\"\r\n                      />\r\n                      <span>Женщине</span>\r\n                    </div>\r\n                  </Row>                  \r\n                </Container>\r\n                <PriceBlock theme=\"dark\" oldPrice={this.state.programs[8].oldPrice + ' р'} price={this.state.programs[8].price + ' р'} />\r\n                <Button text=\"Купить сейчас\" buttonHandler={() => this.buyProgramBytton(8)} />\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n\r\n          <h1>Дополнительные услуги</h1>\r\n          <div className=\"row m-0 p-0\">\r\n            <div className=\"col-lg-6 m-0 p-0\">\r\n              <div className=\"AdditionalServices__card gray\">\r\n                <h2>Онлайн-Консультация</h2>\r\n                <DashedBorderBlock\r\n                  bgColor=\"#ffffff\"\r\n                  border=\"1px dashed #058DC7\"\r\n                  color=\"#313131\"\r\n                  width=\"100%\"\r\n                  pluses={false}\r\n                >\r\n                  Ответы на интересующие вопросы, выявление потребностей, сопоставление желаемого результата с\r\n                  реальностью и образом жизни.\r\n                </DashedBorderBlock>\r\n                <PriceBlock theme=\"light\" price={this.state.programs[4].price + ' р/час'} />\r\n                <Button text=\"Купить сейчас\" buttonHandler={() => this.buyProgramBytton(4)} />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-6 m-0 p-0\">\r\n              <div className=\"AdditionalServices__card gray\">\r\n                <h2>Подбор бадов</h2>\r\n                <DashedBorderBlock\r\n                  bgColor=\"#ffffff\"\r\n                  border=\"1px dashed #058DC7\"\r\n                  color=\"#313131\"\r\n                  width=\"100%\"\r\n                  pluses={false}\r\n                >\r\n                  Подбор бадов и способа их применения с учетом ваших потребностей и задач.\r\n                </DashedBorderBlock>\r\n                <PriceBlock theme=\"light\" price={this.state.programs[5].price + ' р'} />\r\n                <Button text=\"Купить сейчас\" buttonHandler={() => this.buyProgramBytton(5)} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row m-0 p-0\">\r\n            <div className=\"col-lg-6 m-0 p-0\">\r\n              <div className=\"AdditionalServices__card gray\">\r\n                <h2>Диагностика</h2>\r\n                <DashedBorderBlock\r\n                  bgColor=\"#ffffff\"\r\n                  border=\"1px dashed #058DC7\"\r\n                  color=\"#313131\"\r\n                  width=\"100%\"\r\n                  pluses={false}\r\n                >\r\n                  Диагностика по анализам крови и рекомендации на основе полученного результата.\r\n                </DashedBorderBlock>\r\n                <PriceBlock theme=\"light\" price={this.state.programs[6].price + ' р'} />\r\n                <Button text=\"Купить сейчас\" buttonHandler={() => this.buyProgramBytton(6)} />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-6 m-0 p-0\">\r\n              <div\r\n                style={{ backgroundImage: 'url(/img/contacts_photo.png)' }}\r\n                className=\"AdditionalServices__card green\"\r\n              >\r\n                <div className=\"AdditionalServices__card__text\">\r\n                  <h2 style={{ color: '#ffffff' }}>Напишите мне</h2>\r\n                  <p>на один из предложенных каналов связи и я отвечу на любые вопросы</p>\r\n\r\n                  <div className=\"AdditionalServices__iconButton\" onClick={() => this.onClickHandler(1)}>\r\n                    <img src=\"/img/whatsapp_blue.svg\" alt=\"whatsapp\" />\r\n                    Whatsapp\r\n                  </div>\r\n\r\n                  <div className=\"AdditionalServices__iconButton\" onClick={() => this.onClickHandler(0)}>\r\n                    <img src=\"/img/insta_blue.svg\" alt=\"instagram\" />\r\n                    Instagram\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Element>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setOrderPayment,\r\n  setShowPaymentModal,\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => {\r\n  const order = state.order\r\n  return {\r\n    order,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdditionalServices)\r\n","C:\\GitHub\\gromov\\src\\Redux\\reducers\\modal.tsx",[],"C:\\GitHub\\gromov\\src\\SharedComponents\\BottomShadowBlock\\BottomShadowBlock.tsx",[],"C:\\GitHub\\gromov\\src\\SharedComponents\\PriceBlock\\PriceBlock.tsx",["204","205"],"import React from 'react'\r\nimport { Container, Row } from 'react-bootstrap'\r\nimport './PriceBlock.scss'\r\n\r\ninterface PriceBlockProps {\r\n  theme: 'dark' | 'light'\r\n  price: string\r\n  oldPrice?: string\r\n}\r\n\r\ninterface PriceBlockState {}\r\n\r\nclass PriceBlock extends React.Component<PriceBlockProps, PriceBlockState> {\r\n  render() {\r\n    return (\r\n      <div className={`PriceBlock ${this.props.theme === 'dark' ? 'dark' : ''}`}>\r\n        <div className=\"PriceBlock__title\">Стоимость</div>\r\n\r\n        <div className=\"PriceBlock_prices d-flex\">\r\n          {this.props.oldPrice && (\r\n            <div className=\"PriceBlock__oldPrice\" style={{color: this.props.theme === \"dark\" ? '#DCDCDC' : '#9d9e9e'}}>\r\n              <div>{this.props.oldPrice}</div>\r\n              <div className=\"PriceBlock__oldPriceLine\"></div>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"PriceBlock__price\">{this.props.price}</div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PriceBlock\r\n","C:\\GitHub\\gromov\\src\\SharedComponents\\ExclusiveCard\\ExclusiveCard.tsx",[],"C:\\GitHub\\gromov\\src\\SharedComponents\\PayBlock\\PayBlock.tsx",["206","207","208","209","210","211","212","213","214","215","216","217","218","219","220"],"import React from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\nimport Button from '../Button/Button'\r\nimport ReactInputMask from 'react-input-mask'\r\nimport { connect } from 'react-redux'\r\nimport { Items } from '../../Interfaces/Items'\r\nimport { Receipt } from '../../Interfaces/Receipt'\r\nimport { TinkoffPay } from '../../Interfaces/TinkoffPay'\r\nimport { RootState } from '../../Redux'\r\nimport { setShowPaymentModal } from '../../Redux/actions/modal'\r\nimport { setOrderPayment } from '../../Redux/actions/order'\r\nimport { ModalState, OrderState } from '../../Redux/interfaces/interfaces'\r\nimport { sha256 } from 'js-sha256'\r\n\r\nimport './PayBlock.scss'\r\nimport Config from '../../Config/Config'\r\nimport PromoCodes from '../../Interfaces/PromoCodes'\r\nimport { valuesIn } from 'lodash'\r\n\r\ninterface PayBlockProps {\r\n  modal: ModalState\r\n  order: OrderState\r\n  setShowPaymentModal: (isActive: boolean) => void\r\n  setOrderPayment: (payment: TinkoffPay) => void\r\n}\r\n\r\ninterface PayBlockState {\r\n  formData: {\r\n    phone: string\r\n    phoneValid: boolean\r\n    email: string\r\n    emailValid: boolean\r\n    inputPhoneTouched: boolean\r\n    inputEmailTouched: boolean\r\n    minPhoneNumbers: number\r\n    checkbox: boolean\r\n    formValid: boolean\r\n    agreeTouched: boolean\r\n    agree: boolean\r\n    showFormErrorMessage: boolean\r\n    loading: boolean\r\n    promoCode: string\r\n    promoCodeValid: boolean\r\n    promoExecuted: boolean\r\n    discount: number\r\n  }\r\n}\r\n\r\ninterface OrderData {\r\n  email: string\r\n  phone: string\r\n  PaymentId: string\r\n  itemName: string\r\n  Token: string\r\n}\r\n\r\nclass PayBlock extends React.Component<PayBlockProps, PayBlockState> {\r\n  constructor(props: PayBlockProps) {\r\n    super(props)\r\n    this.state = {\r\n      formData: {\r\n        phone: '',\r\n        phoneValid: false,\r\n        email: '',\r\n        emailValid: false,\r\n        inputPhoneTouched: false,\r\n        inputEmailTouched: false,\r\n        minPhoneNumbers: 10,\r\n        checkbox: true,\r\n        formValid: false,\r\n        agreeTouched: false,\r\n        agree: false,\r\n        showFormErrorMessage: false,\r\n        loading: false,\r\n        promoCode: '',\r\n        promoCodeValid: true,\r\n        promoExecuted: false,\r\n        discount: 0,\r\n      },\r\n    }\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  payTinkoff = async (): Promise<any> => {\r\n    const url: string = 'https://securepay.tinkoff.ru/v2/Init'\r\n    const headers = {\r\n      'Content-Type': 'application/json',\r\n    }\r\n\r\n    const payment: TinkoffPay = this.props.order.payment\r\n\r\n    let Token: string = ''\r\n\r\n    Token = Token.concat(\r\n      payment.Amount.toString(),\r\n      payment.Description,\r\n      payment.OrderId,\r\n      Config.TerminalPassword,\r\n      Config.TerminalKey\r\n    )\r\n    // console.log(Token)\r\n    Token = sha256(Token)\r\n    // console.log(Token)\r\n\r\n    payment.Token = Token\r\n\r\n    if (payment.Receipt) {\r\n      payment.Receipt.Email = this.state.formData.email\r\n      payment.Receipt.Phone = this.state.formData.phone\r\n    }\r\n\r\n    // console.log(payment)\r\n\r\n    const res = await fetch(url, {\r\n      method: 'POST',\r\n      headers,\r\n      body: JSON.stringify(payment),\r\n    })\r\n\r\n    const paymentResult = await res.json()\r\n\r\n    // console.log(paymentResult)\r\n\r\n    if (paymentResult.PaymentId) {\r\n      localStorage.setItem('payment', JSON.stringify(payment))\r\n\r\n      window.open(paymentResult.PaymentURL, '_self')\r\n    } else {\r\n      window.open(payment.FailURL, '_self')\r\n    }\r\n  }\r\n\r\n  onClickHandler = async (): Promise<any> => {\r\n    const url: string = 'https://securepay.tinkoff.ru/v2/Init'\r\n    const headers = {\r\n      'Content-Type': 'application/json',\r\n    }\r\n\r\n    const serviceName = 'Базовая тренировочная программа'\r\n    const servicePrice = 900\r\n    const serviceQuantity = 1\r\n\r\n    // Items Массив позиций чека с информацией о товарах.\r\n    const Items: Items[] = [\r\n      {\r\n        Amount: servicePrice * serviceQuantity,\r\n        Name: serviceName,\r\n        Price: servicePrice,\r\n        Quantity: serviceQuantity,\r\n        Tax: 'none',\r\n      },\r\n    ]\r\n\r\n    // Receipt Массив данных чека.\r\n    const Receipt: Receipt = {\r\n      Email: 'bck-dkiselev@yandex.ru',\r\n      Phone: '8-961-815-26-33',\r\n      Taxation: 'usn_income',\r\n      Items: Items,\r\n    }\r\n\r\n    // PaymentData\r\n    const Payment: TinkoffPay = {\r\n      TerminalKey: 'TinkoffBankTest',\r\n      OrderId: new Date().valueOf().toString(),\r\n      Amount: servicePrice * serviceQuantity,\r\n      Description: 'Тестовый платеж',\r\n      SuccessURL: '/successpay',\r\n      FailURL: '/failpay',\r\n      Receipt: Receipt,\r\n    }\r\n\r\n    // const res = await fetch(url, {\r\n    //   method: 'POST',\r\n    //   headers,\r\n    //   body: JSON.stringify(Payment)\r\n    // })\r\n\r\n    // console.log(await res.json())\r\n  }\r\n\r\n  formButtonClick = (): void => {\r\n    const formData = this.state.formData\r\n    formData.inputEmailTouched = true\r\n    formData.inputPhoneTouched = true\r\n    formData.agreeTouched = true\r\n    formData.emailValid = this.emailValidate(formData.email)\r\n    formData.phoneValid = this.phoneValidate(formData.phone)\r\n    formData.formValid = formData.emailValid && formData.phoneValid && formData.agree\r\n\r\n    if (formData.formValid) {\r\n      formData.loading = true\r\n      this.payTinkoff()\r\n    } else {\r\n      formData.showFormErrorMessage = true\r\n    }\r\n    this.setState({ formData })\r\n  }\r\n\r\n  phoneValidate = (phone: string): boolean => {\r\n    // filterPhone = filterPhone + phone.match(/\\d/g)?.join('')\r\n    if (phone.length < this.state.formData.minPhoneNumbers) {\r\n      return false\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n\r\n  emailValidate = (email: string): boolean => {\r\n    const reg = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/\r\n    if (!reg.test(email)) {\r\n      return false\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n\r\n  onEmailChange = (event: any): void => {\r\n    const formData = this.state.formData\r\n    formData.email = event.target.value\r\n    !formData.inputEmailTouched && (formData.inputEmailTouched = true)\r\n    formData.emailValid = this.emailValidate(formData.email)\r\n    formData.showFormErrorMessage = false\r\n\r\n    this.setState({ formData })\r\n  }\r\n\r\n  onPromoChange = (event: any): void => {\r\n    const formData = this.state.formData\r\n    formData.promoCode = event.target.value\r\n    formData.promoCodeValid = true\r\n\r\n    this.setState({ formData })\r\n  }\r\n\r\n  //Оставляет только численную строку с + или без в начале\r\n  checkPhone = (phone: string): string => {\r\n    let result = phone.match(/\\d/g)?.join('')\r\n    const plus = phone.match(/\\+/)?.join('')\r\n    if(result) {\r\n      if (plus) {\r\n        return (plus + result)\r\n      } else {\r\n        return result\r\n      }\r\n    } \r\n\r\n    if(plus) {\r\n      return plus\r\n    }\r\n    \r\n    return ''\r\n  }\r\n\r\n  onPhoneChange = (event: any): void => {\r\n    const formData = this.state.formData\r\n    formData.phone = event.target.value\r\n    formData.phone = this.checkPhone(formData.phone)\r\n    // console.log(formData.phone)\r\n\r\n    this.setState({ formData })\r\n  }\r\n\r\n  // onPhoneChange = (event: any): void => {\r\n  //   const formData = this.state.formData\r\n  //   formData.phone = event.target.value\r\n  //   !formData.inputPhoneTouched && (formData.inputPhoneTouched = true)\r\n  //   formData.phoneValid = this.phoneValidate(formData.phone)\r\n  //   formData.showFormErrorMessage = false\r\n\r\n  //   this.setState({ formData })\r\n  // }\r\n\r\n  checkboxHandler = (): void => {\r\n    const formData = this.state.formData\r\n    formData.agree = !formData.agree\r\n    formData.agreeTouched = true\r\n    formData.showFormErrorMessage = false\r\n    this.setState({ formData })\r\n  }\r\n\r\n  executePromo = (): void => {\r\n    const promoCodes: PromoCodes[] = Config.promoCodes\r\n    const promoEntry = this.state.formData.promoCode\r\n    const formData = this.state.formData\r\n    let discount = 0\r\n    promoCodes.map((promoCode) => {\r\n      promoCode.codeList.map((promo) => {\r\n        if (promo.toLowerCase() === promoEntry.toLowerCase()) {\r\n          discount = promoCode.discount\r\n        }\r\n      })\r\n    })\r\n\r\n    if (discount > 0) {\r\n      const payment: TinkoffPay = this.props.order.payment\r\n      let amount = 0\r\n      payment.Receipt?.Items.map((item) => {\r\n        const price = ((100 - discount) / 100) * item.Price\r\n        item.Price = price\r\n        item.Amount = price\r\n        amount = amount + price\r\n      })\r\n\r\n      payment.Amount = amount\r\n      this.props.setOrderPayment(payment)\r\n      formData.discount = discount\r\n      formData.promoExecuted = true\r\n      this.setState({ formData })\r\n    } else {\r\n      formData.promoCodeValid = false\r\n      this.setState({ formData })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid className=\"PayBlock m-0 p-0\">\r\n        <Row className=\"PayBlock__formHeader m-0 d-flex justify-content-center\">\r\n          <h1>{this.props.order.payment.Description}</h1>\r\n        </Row>\r\n        <Row className=\"PayBlock__descr m-0 d-flex justify-content-center\">\r\n          {this.props.order.payment.Receipt\r\n            ? this.props.order.payment.Receipt.Items.map((item, index) => {\r\n                if (this.props.order.payment.Description !== item.Name) {\r\n                  return <div key={index}>{item.Name}</div>\r\n                }\r\n              })\r\n            : null}\r\n        </Row>\r\n        <Row className=\"PayBlock__fieldsList m-0\">\r\n          <Col className=\"PayBlock__fieldsListCont\">\r\n            <div className=\"PayBlock__inputCont\">\r\n              <h3>Ваш E-mail</h3>\r\n              <input\r\n                type=\"email\"\r\n                className={`PayBlock__input ${\r\n                  this.state.formData.inputEmailTouched\r\n                    ? this.state.formData.emailValid\r\n                      ? 'inputValid'\r\n                      : 'inputInvalid'\r\n                    : null\r\n                } `}\r\n                value={this.state.formData.email}\r\n                placeholder=\"example@domain.com\"\r\n                name=\"email\"\r\n                onChange={(event) => this.onEmailChange(event)}\r\n              />\r\n              {this.state.formData.inputEmailTouched && !this.state.formData.emailValid ? (\r\n                <small className=\"RequestFormModal__inputErrorMessage\">Введите корректный email.</small>\r\n              ) : null}\r\n            </div>\r\n\r\n            <div className=\"PayBlock__inputCont\">\r\n              <h3>Номер телефона</h3>\r\n              {/* <ReactInputMask\r\n                mask=\"9 (999) 999-99-99\"\r\n                className={`PayBlock__input ${\r\n                  this.state.formData.inputPhoneTouched\r\n                    ? this.state.formData.phoneValid\r\n                      ? 'inputValid'\r\n                      : 'inputInvalid'\r\n                    : null\r\n                } `}\r\n                type=\"tel\"\r\n                name=\"phone\"\r\n                placeholder=\"_ (___) ___-__-__\"\r\n                value={this.state.formData.phone}\r\n                onChange={(event) => this.onPhoneChange(event)}\r\n              /> */}\r\n\r\n              <input\r\n                className={`PayBlock__input ${\r\n                  this.state.formData.inputPhoneTouched\r\n                    ? this.state.formData.phoneValid\r\n                      ? 'inputValid'\r\n                      : 'inputInvalid'\r\n                    : null\r\n                } `}\r\n                type=\"tel\"\r\n                name=\"phone\"\r\n                placeholder=\"Введите номер телефона\"\r\n                value={this.state.formData.phone}\r\n                onChange={(event) => this.onPhoneChange(event)}\r\n              />\r\n\r\n              {this.state.formData.inputPhoneTouched && !this.state.formData.phoneValid ? (\r\n                <small className=\"RequestFormModal__inputErrorMessage\">Введите корректный телефонный номер.</small>\r\n              ) : null}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row\r\n          className={`PayBlock__checkboxRow m-0 ${\r\n            this.state.formData.agreeTouched && !this.state.formData.agree ? 'checkBoxInvalid' : ''\r\n          }`}\r\n        >\r\n          <Col\r\n            xs={2}\r\n            className=\"PayBlock__checkbox d-flex justify-content-center pt-2\"\r\n            onClick={() => this.checkboxHandler()}\r\n          >\r\n            <input\r\n              key={this.state.formData.agree.toString()}\r\n              className=\"PayBlock__check\"\r\n              type=\"checkbox\"\r\n              name=\"agree\"\r\n              checked={this.state.formData.agree}\r\n              readOnly={true}\r\n            />\r\n          </Col>\r\n          <Col xs={10} className=\"PayBlock__checkboxTitle\">\r\n            Я ознакомился с{' '}\r\n            <a href=\"#\" target=\"_blank\">\r\n              политикой использования персональных данных\r\n            </a>{' '}\r\n            и с{' '}\r\n            <a href={`${Config.siteURL}/dogovor.pdf`} target=\"_blank\">\r\n              условиями договора на оказание услуг\r\n            </a>\r\n          </Col>\r\n        </Row>\r\n\r\n        {!this.state.formData.promoExecuted ? (\r\n          <Row className=\"PayBlock__promoCode PayBlock__inputCont\">\r\n            <Col xs={6} className=\"PayBlock__promoTextBlock\">\r\n              <input\r\n                type=\"string\"\r\n                className={`PayBlock__input ${!this.state.formData.promoCodeValid ? 'inputInvalid' : ''}`}\r\n                value={this.state.formData.promoCode}\r\n                name=\"promo\"\r\n                placeholder=\"промо код\"\r\n                autoComplete=\"off\"\r\n                onChange={(event) => this.onPromoChange(event)}\r\n              />\r\n            </Col>\r\n            <Col xs={6} className=\"PayBlock__promoButton\">\r\n              <Button text=\"Применить\" buttonHandler={() => this.executePromo()} />\r\n            </Col>\r\n          </Row>\r\n        ) : (\r\n          <Row className=\"PayBlock__promoCodeEx justify-content-center\">\r\n            Вы успешно активировали промо код на {this.state.formData.discount}% скидку\r\n          </Row>\r\n        )}\r\n\r\n        <Row className=\"PayBlock__finalPriceCont d-flex justify-content-between align-items-center\">\r\n          <div className=\"PayBlock__finalPriceTitle\">Стоимость</div>\r\n          <div className=\"PayBlock__finalPrice\">\r\n            <span>{this.props.order.payment.Amount / 100}</span> Р\r\n          </div>\r\n        </Row>\r\n\r\n        {this.state.formData.showFormErrorMessage ? (\r\n          <Row className=\"PayBlock__formErrorMessage d-flex justify-content-center align-items-center\">\r\n            Заполните корректно все поля формы!\r\n          </Row>\r\n        ) : null}\r\n\r\n        {this.state.formData.loading ? (\r\n          <Row className=\"PayBlock__loading d-flex justify-content-center\">\r\n            <div className=\"lds-ellipsis\">\r\n              <div></div>\r\n              <div></div>\r\n              <div></div>\r\n              <div></div>\r\n            </div>\r\n          </Row>\r\n        ) : (\r\n          <Row className=\"PayBlock__buttonCont\" onClick={() => this.formButtonClick()}>\r\n            <div\r\n              className={`PayBlock__button w-100 d-flex justify-content-center align-items-center ${\r\n                this.state.formData.agree ? 'active' : 'disabled'\r\n              }`}\r\n            >\r\n              Купить сейчас\r\n            </div>\r\n          </Row>\r\n        )}\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setShowPaymentModal,\r\n  setOrderPayment,\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => {\r\n  const modal = state.modal\r\n  const order = state.order\r\n  return {\r\n    modal,\r\n    order,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PayBlock)\r\n","C:\\GitHub\\gromov\\src\\App.tsx",[],"C:\\GitHub\\gromov\\src\\Redux\\actions\\modal.tsx",[],"C:\\GitHub\\gromov\\src\\SharedComponents\\ModalPayment\\ModalPayment.tsx",[],"C:\\GitHub\\gromov\\src\\Redux\\constants\\ActionTypes.tsx",[],"C:\\GitHub\\gromov\\src\\Layouts\\MainLayout\\MainBody\\MainBody.tsx",[],"C:\\GitHub\\gromov\\src\\Layouts\\AdminLayout\\Pages\\AdminPage\\AdminPage.tsx",[],"C:\\GitHub\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Exclusive\\Exclusive.tsx",[],"C:\\GitHub\\gromov\\src\\SharedComponents\\Button\\Button.tsx",["221"],"import React from 'react'\r\nimport { Container } from 'react-bootstrap'\r\nimport './Button.scss'\r\n\r\ninterface ButtonProps {\r\n  text: string\r\n  buttonHandler: () => void\r\n}\r\n\r\ninterface ButtonState {}\r\n\r\nclass Button extends React.Component<ButtonProps, ButtonState> {\r\n  render() {\r\n    return (\r\n      <div onClick={this.props.buttonHandler} className=\"Button\">\r\n        {this.props.text}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Button\r\n","C:\\GitHub\\gromov\\src\\Redux\\reducers\\toast.tsx",[],"C:\\GitHub\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Certificates\\Certificates.tsx",["222"],"import React from 'react'\r\nimport DashedBorderBlock from '../../../../../SharedComponents/DashedBorderBlock/DashedBorderBlock'\r\nimport { Swiper, SwiperSlide } from 'swiper/react'\r\nimport { Element } from 'react-scroll'\r\n\r\nimport 'swiper/swiper.scss'\r\n\r\nimport './Certificates.scss'\r\nimport { Container, Row } from 'react-bootstrap'\r\n\r\ninterface CertificatesProps {}\r\n\r\ninterface CertificatesState {\r\n  certificatesHorizontal: string[]\r\n  certificatesVertical: string[]\r\n}\r\n\r\nclass Certificates extends React.Component<CertificatesProps, CertificatesState> {\r\n  constructor(props: CertificatesProps) {\r\n    super(props)\r\n    this.state = {\r\n      certificatesHorizontal: [\r\n        '3.jpg',\r\n        '4.jpg',\r\n        '5.jpg',\r\n        '6.jpg',\r\n        '7.jpg',\r\n        '8.jpg',\r\n        '9.jpg',\r\n        '11.jpg',\r\n        '12.jpg',\r\n        '13.jpg',\r\n        '14.jpg',\r\n        '15.jpg',\r\n        '16.jpg',\r\n      ],\r\n      certificatesVertical: ['1.jpg', '2.jpg', '10.jpg'],\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Element name=\"Certificates\">\r\n        <Container className=\"Certificates d-block p-0\">\r\n          <Swiper\r\n            // spaceBetween={10}\r\n            pagination={{ el: '.swiper-pagination', clickable: true }}\r\n            slidesPerView={1}\r\n            breakpoints={{\r\n              992: {\r\n                slidesPerView: 3,\r\n                spaceBetween: 10,\r\n              },\r\n              768: {\r\n                slidesPerView: 2,\r\n                spaceBetween: 10,\r\n              },\r\n            }}\r\n          >\r\n            {this.state.certificatesHorizontal.map((cert, index) => {\r\n              return (\r\n                <SwiperSlide key={index}>\r\n                  <div className=\"Certificates__slide d-flex justify-content-center align-items-center\">\r\n                    <img className=\"img-fluid\" src={`/img/cert/${cert}`} alt=\"\" />\r\n                  </div>\r\n                </SwiperSlide>\r\n              )\r\n            })}\r\n          </Swiper>\r\n          <Row className=\"Certificates__pagination m-0 d-flex justify-content-center pt-5\">\r\n            <div className=\"swiper-pagination\"></div>\r\n          </Row>\r\n        </Container>\r\n\r\n        <Container className=\"Certificates__two d-block p-0\">\r\n          <Swiper\r\n            // spaceBetween={10}\r\n            pagination={{ el: '.swiper-pagination2', clickable: true }}\r\n            slidesPerView={1}\r\n            breakpoints={{\r\n              992: {\r\n                slidesPerView: 3,\r\n                spaceBetween: 10,\r\n              },\r\n              768: {\r\n                slidesPerView: 2,\r\n                spaceBetween: 10,\r\n              },\r\n            }}\r\n          >\r\n            {this.state.certificatesVertical.map((cert, index) => {\r\n              return (\r\n                <SwiperSlide key={index}>\r\n                  <div className=\"Certificates__slide d-flex justify-content-center align-items-center\">\r\n                    <img className=\"img-fluid\" src={`/img/cert/${cert}`} alt=\"\" />\r\n                  </div>\r\n                </SwiperSlide>\r\n              )\r\n            })}\r\n          </Swiper>\r\n          <Row className=\"Certificates__pagination m-0 d-flex justify-content-center pt-5\">\r\n            <div className=\"swiper-pagination2\"></div>\r\n          </Row>\r\n        </Container>\r\n\r\n        {/* <Container fluid className=\"Certificates__Mobile d-block d-md-none p-0\">\r\n          <Swiper\r\n            slidesPerView={1}\r\n            centeredSlides={true}\r\n            spaceBetween={10}\r\n            pagination={{ el: '.swiper-paginationMobile', clickable: true }}\r\n          >\r\n            {this.state.certificates.map((cert, index) => {\r\n              return (\r\n                <SwiperSlide key={index}>\r\n                  <div className=\"Certificates__slide d-flex justify-content-center align-items-center\">\r\n                    <img className=\"img-fluid\" src={`/img/cert/${cert}`} alt=\"\" />\r\n                  </div>\r\n                </SwiperSlide>\r\n              )\r\n            })}\r\n          </Swiper>\r\n          <Row className=\"Certificates__pagination m-0 d-flex justify-content-center pt-5\">          \r\n            <div className=\"swiper-paginationMobile\"></div>  \r\n          </Row>\r\n        </Container> */}\r\n      </Element>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Certificates\r\n","C:\\GitHub\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block5\\Block5.tsx",[],"C:\\GitHub\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block11\\Block11.tsx",[],"C:\\GitHub\\gromov\\src\\SharedComponents\\DashedBorderBlock\\DashedBorderBlock.tsx",[],"C:\\GitHub\\gromov\\src\\SharedComponents\\RoundButton\\RoundButton.tsx",[],"C:\\GitHub\\gromov\\src\\SharedComponents\\MobileMenu\\MobileMenu.tsx",[],"C:\\GitHub\\gromov\\src\\Layouts\\AdminLayout\\Pages\\AdminProfile\\AdminProfile.tsx",[],"C:\\GitHub\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block3\\Block3.tsx",["223","224","225"],"C:\\GitHub\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Achivements\\Achivements.tsx",[],"C:\\GitHub\\gromov\\src\\Redux\\reducers\\order.tsx",[],"C:\\GitHub\\gromov\\src\\SharedComponents\\BeforeAfterBlock\\BeforeAfterBlock.tsx",[],"C:\\GitHub\\gromov\\src\\Redux\\index.tsx",["226"],"C:\\GitHub\\gromov\\src\\SharedComponents\\GiftModal\\GiftModal.tsx",[],"C:\\GitHub\\gromov\\src\\Layouts\\MainLayout\\MainFooter\\MainFooter.tsx",[],"C:\\GitHub\\gromov\\src\\Config\\Config.tsx",[],"C:\\GitHub\\gromov\\src\\Redux\\reducers\\app.tsx",[],"C:\\GitHub\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block7\\Block7.tsx",[],"C:\\GitHub\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block2\\Block2.tsx",[],"C:\\GitHub\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block1\\Block1.tsx",[],{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","replacedBy":"230"},{"ruleId":"231","severity":1,"message":"232","line":14,"column":11,"nodeType":"233","messageId":"234","endLine":14,"endColumn":22},{"ruleId":"231","severity":1,"message":"235","line":20,"column":11,"nodeType":"233","messageId":"234","endLine":20,"endColumn":20},{"ruleId":"227","replacedBy":"236"},{"ruleId":"229","replacedBy":"237"},{"ruleId":"231","severity":1,"message":"238","line":2,"column":10,"nodeType":"233","messageId":"234","endLine":2,"endColumn":13},{"ruleId":"231","severity":1,"message":"239","line":2,"column":26,"nodeType":"233","messageId":"234","endLine":2,"endColumn":29},{"ruleId":"231","severity":1,"message":"240","line":18,"column":8,"nodeType":"233","messageId":"234","endLine":18,"endColumn":20},{"ruleId":"227","replacedBy":"241"},{"ruleId":"229","replacedBy":"242"},{"ruleId":"231","severity":1,"message":"243","line":6,"column":8,"nodeType":"233","messageId":"234","endLine":6,"endColumn":19},{"ruleId":"231","severity":1,"message":"244","line":2,"column":10,"nodeType":"233","messageId":"234","endLine":2,"endColumn":19},{"ruleId":"231","severity":1,"message":"239","line":2,"column":21,"nodeType":"233","messageId":"234","endLine":2,"endColumn":24},{"ruleId":"231","severity":1,"message":"245","line":4,"column":8,"nodeType":"233","messageId":"234","endLine":4,"endColumn":22},{"ruleId":"231","severity":1,"message":"246","line":18,"column":10,"nodeType":"233","messageId":"234","endLine":18,"endColumn":18},{"ruleId":"231","severity":1,"message":"235","line":49,"column":11,"nodeType":"233","messageId":"234","endLine":49,"endColumn":20},{"ruleId":"231","severity":1,"message":"247","line":135,"column":11,"nodeType":"233","messageId":"234","endLine":135,"endColumn":22},{"ruleId":"231","severity":1,"message":"248","line":136,"column":11,"nodeType":"233","messageId":"234","endLine":136,"endColumn":18},{"ruleId":"231","severity":1,"message":"249","line":164,"column":11,"nodeType":"233","messageId":"234","endLine":164,"endColumn":30},{"ruleId":"250","severity":1,"message":"251","line":211,"column":33,"nodeType":"252","messageId":"253","endLine":211,"endColumn":34,"suggestions":"254"},{"ruleId":"250","severity":1,"message":"255","line":211,"column":38,"nodeType":"252","messageId":"253","endLine":211,"endColumn":39,"suggestions":"256"},{"ruleId":"250","severity":1,"message":"251","line":211,"column":54,"nodeType":"252","messageId":"253","endLine":211,"endColumn":55,"suggestions":"257"},{"ruleId":"258","severity":1,"message":"259","line":288,"column":32,"nodeType":"260","messageId":"261","endLine":288,"endColumn":34},{"ruleId":"258","severity":1,"message":"259","line":289,"column":38,"nodeType":"260","messageId":"261","endLine":289,"endColumn":40},{"ruleId":"258","severity":1,"message":"259","line":299,"column":41,"nodeType":"260","messageId":"261","endLine":299,"endColumn":43},{"ruleId":"258","severity":1,"message":"262","line":325,"column":72,"nodeType":"260","messageId":"263","endLine":325,"endColumn":74},{"ruleId":"264","severity":1,"message":"265","line":415,"column":13,"nodeType":"266","endLine":415,"endColumn":41},{"ruleId":"267","severity":1,"message":"268","line":419,"column":55,"nodeType":"269","endLine":419,"endColumn":70},{"ruleId":"231","severity":1,"message":"244","line":2,"column":10,"nodeType":"233","messageId":"234","endLine":2,"endColumn":19},{"ruleId":"231","severity":1,"message":"270","line":2,"column":8,"nodeType":"233","messageId":"234","endLine":2,"endColumn":25},{"ruleId":"231","severity":1,"message":"271","line":3,"column":8,"nodeType":"233","messageId":"234","endLine":3,"endColumn":24},{"ruleId":"231","severity":1,"message":"270","line":5,"column":8,"nodeType":"233","messageId":"234","endLine":5,"endColumn":25},{"ruleId":"231","severity":1,"message":"272","line":6,"column":8,"nodeType":"233","messageId":"234","endLine":6,"endColumn":18},{"ruleId":"231","severity":1,"message":"273","line":2,"column":10,"nodeType":"233","messageId":"234","endLine":2,"endColumn":29},"no-native-reassign",["274"],"no-negated-in-lhs",["275"],"@typescript-eslint/no-unused-vars","'RequestData' is defined but never used.","Identifier","unusedVar","'OrderData' is defined but never used.",["274"],["275"],"'Col' is defined but never used.","'Row' is defined but never used.","'ComplexBlock' is defined but never used.",["274"],["275"],"'RoundButton' is defined but never used.","'Container' is defined but never used.","'ReactInputMask' is defined but never used.","'valuesIn' is defined but never used.","'url' is assigned a value but never used.","'headers' is assigned a value but never used.","'Payment' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["276","277"],"Unnecessary escape character: \\@.",["278","279"],["280","281"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'DashedBorderBlock' is defined but never used.","'BeforeAfterBlock' is defined but never used.","'IconButton' is defined but never used.","'composeWithDevTools' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"282","fix":"283","desc":"284"},{"messageId":"285","fix":"286","desc":"287"},{"messageId":"282","fix":"288","desc":"284"},{"messageId":"285","fix":"289","desc":"287"},{"messageId":"282","fix":"290","desc":"284"},{"messageId":"285","fix":"291","desc":"287"},"removeEscape",{"range":"292","text":"293"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"294","text":"295"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"296","text":"293"},{"range":"297","text":"295"},{"range":"298","text":"293"},{"range":"299","text":"295"},[5678,5679],"",[5678,5678],"\\",[5683,5684],[5683,5683],[5699,5700],[5699,5699]]
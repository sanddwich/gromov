[{"C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\ModalPayment\\ModalPayment.tsx":"1","C:\\GitHub\\repositories\\gromov\\src\\Config\\Config.tsx":"2","C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block2\\Block2.tsx":"3","C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\BottomShadowBlock\\BottomShadowBlock.tsx":"4","C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\PayBlock\\PayBlock.tsx":"5","C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block8\\Block8.tsx":"6","C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\PriceBlock\\PriceBlock.tsx":"7","C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\MainLayout.tsx":"8","C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\BeforeAfterBlock\\BeforeAfterBlock.tsx":"9","C:\\GitHub\\repositories\\gromov\\src\\index.tsx":"10","C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\MainFooter\\MainFooter.tsx":"11","C:\\GitHub\\repositories\\gromov\\src\\Layouts\\AdminLayout\\Pages\\AdminPage\\AdminPage.tsx":"12","C:\\GitHub\\repositories\\gromov\\src\\Layouts\\AdminLayout\\Pages\\AdminProfile\\AdminProfile.tsx":"13","C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\IconButton\\IconButton.tsx":"14","C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\SuccessPay\\SuccessPay.tsx":"15","C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\MobileMenu\\MobileMenu.tsx":"16","C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\ExclusiveCard\\ExclusiveCard.tsx":"17","C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block1\\Block1.tsx":"18","C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\QuizPage\\QuizPage.tsx":"19","C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Exclusive\\Exclusive.tsx":"20","C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block3\\Block3.tsx":"21","C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\RoundButton\\RoundButton.tsx":"22","C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Second\\Second.tsx":"23","C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\FailedPay\\FailedPay.tsx":"24","C:\\GitHub\\repositories\\gromov\\src\\App.tsx":"25","C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Main.tsx":"26","C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\MainBody\\MainBody.tsx":"27"},{"size":1968,"mtime":1613057715798,"results":"28","hashOfConfig":"29"},{"size":10607,"mtime":1625068440733,"results":"30","hashOfConfig":"29"},{"size":4215,"mtime":1624897226213,"results":"31","hashOfConfig":"29"},{"size":2127,"mtime":1610377952655,"results":"32","hashOfConfig":"29"},{"size":14668,"mtime":1625065150318,"results":"33","hashOfConfig":"29"},{"size":9575,"mtime":1618328358636,"results":"34","hashOfConfig":"29"},{"size":1001,"mtime":1625063624990,"results":"35","hashOfConfig":"29"},{"size":1248,"mtime":1613308501364,"results":"36","hashOfConfig":"29"},{"size":2131,"mtime":1612287908932,"results":"37","hashOfConfig":"29"},{"size":673,"mtime":1610377956354,"results":"38","hashOfConfig":"29"},{"size":394,"mtime":1610382772571,"results":"39","hashOfConfig":"29"},{"size":408,"mtime":1610377950541,"results":"40","hashOfConfig":"29"},{"size":496,"mtime":1610377950646,"results":"41","hashOfConfig":"29"},{"size":1793,"mtime":1612283296083,"results":"42","hashOfConfig":"29"},{"size":4715,"mtime":1620635810428,"results":"43","hashOfConfig":"29"},{"size":5348,"mtime":1625069557968,"results":"44","hashOfConfig":"29"},{"size":1263,"mtime":1625063624986,"results":"45","hashOfConfig":"29"},{"size":7102,"mtime":1625068462964,"results":"46","hashOfConfig":"29"},{"size":2329,"mtime":1625068503335,"results":"47","hashOfConfig":"29"},{"size":4740,"mtime":1625068632730,"results":"48","hashOfConfig":"29"},{"size":3360,"mtime":1617901797142,"results":"49","hashOfConfig":"29"},{"size":805,"mtime":1612284294422,"results":"50","hashOfConfig":"29"},{"size":379,"mtime":1610377951470,"results":"51","hashOfConfig":"29"},{"size":1047,"mtime":1613310569562,"results":"52","hashOfConfig":"29"},{"size":1698,"mtime":1614781508026,"results":"53","hashOfConfig":"29"},{"size":1603,"mtime":1625063624984,"results":"54","hashOfConfig":"29"},{"size":409,"mtime":1610377950776,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"pgzerv",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\ModalPayment\\ModalPayment.tsx",[],["115","116"],"C:\\GitHub\\repositories\\gromov\\src\\Config\\Config.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block2\\Block2.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\BottomShadowBlock\\BottomShadowBlock.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\PayBlock\\PayBlock.tsx",["117","118","119","120","121","122","123","124","125","126","127","128","129"],"import React from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\nimport Button from '../Button/Button'\r\nimport ReactInputMask from 'react-input-mask'\r\nimport { connect } from 'react-redux'\r\nimport { Items } from '../../Interfaces/Items'\r\nimport { Receipt } from '../../Interfaces/Receipt'\r\nimport { TinkoffPay } from '../../Interfaces/TinkoffPay'\r\nimport { RootState } from '../../Redux'\r\nimport { setShowPaymentModal } from '../../Redux/actions/modal'\r\nimport { setOrderPayment } from '../../Redux/actions/order'\r\nimport { ModalState, OrderState } from '../../Redux/interfaces/interfaces'\r\nimport { sha256 } from 'js-sha256'\r\n\r\nimport './PayBlock.scss'\r\nimport Config from '../../Config/Config'\r\nimport PromoCodes from '../../Interfaces/PromoCodes'\r\n\r\ninterface PayBlockProps {\r\n  modal: ModalState\r\n  order: OrderState\r\n  setShowPaymentModal: (isActive: boolean) => void\r\n  setOrderPayment: (payment: TinkoffPay) => void\r\n}\r\n\r\ninterface PayBlockState {\r\n  formData: {\r\n    phone: string\r\n    phoneValid: boolean\r\n    email: string\r\n    emailValid: boolean\r\n    inputPhoneTouched: boolean\r\n    inputEmailTouched: boolean\r\n    minPhoneNumbers: number\r\n    checkbox: boolean\r\n    formValid: boolean\r\n    agreeTouched: boolean\r\n    agree: boolean\r\n    showFormErrorMessage: boolean\r\n    loading: boolean\r\n    promoCode: string\r\n    promoCodeValid: boolean\r\n    promoExecuted: boolean\r\n    discount: number\r\n  }\r\n}\r\n\r\ninterface OrderData {\r\n  email: string\r\n  phone: string\r\n  PaymentId: string\r\n  itemName: string\r\n  Token: string\r\n}\r\n\r\nclass PayBlock extends React.Component<PayBlockProps, PayBlockState> {\r\n  constructor(props: PayBlockProps) {\r\n    super(props)\r\n    this.state = {\r\n      formData: {\r\n        phone: '',\r\n        phoneValid: false,\r\n        email: '',\r\n        emailValid: false,\r\n        inputPhoneTouched: false,\r\n        inputEmailTouched: false,\r\n        minPhoneNumbers: 11,\r\n        checkbox: true,\r\n        formValid: false,\r\n        agreeTouched: false,\r\n        agree: false,\r\n        showFormErrorMessage: false,\r\n        loading: false,\r\n        promoCode: '',\r\n        promoCodeValid: true,\r\n        promoExecuted: false,\r\n        discount: 0,\r\n      },\r\n    }\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  payTinkoff = async (): Promise<any> => {\r\n    const url: string = 'https://securepay.tinkoff.ru/v2/Init'\r\n    const headers = {\r\n      'Content-Type': 'application/json',\r\n    }\r\n\r\n    const payment: TinkoffPay = this.props.order.payment\r\n\r\n    let Token: string = ''\r\n\r\n    Token = Token.concat(\r\n      payment.Amount.toString(),\r\n      payment.Description,\r\n      payment.OrderId,\r\n      Config.TerminalPassword,\r\n      Config.TerminalKey\r\n    )\r\n    // console.log(Token)\r\n    Token = sha256(Token)\r\n    // console.log(Token)\r\n\r\n    payment.Token = Token\r\n\r\n    if (payment.Receipt) {\r\n      payment.Receipt.Email = this.state.formData.email\r\n      payment.Receipt.Phone = this.state.formData.phone\r\n    }\r\n\r\n    // console.log(payment)\r\n\r\n    const res = await fetch(url, {\r\n      method: 'POST',\r\n      headers,\r\n      body: JSON.stringify(payment),\r\n    })\r\n\r\n    const paymentResult = await res.json()\r\n\r\n    // console.log(paymentResult)\r\n\r\n    if (paymentResult.PaymentId) {\r\n      localStorage.setItem('payment', JSON.stringify(payment))\r\n\r\n      window.open(paymentResult.PaymentURL, '_self')\r\n    } else {\r\n      window.open(payment.FailURL, '_self')\r\n    }\r\n  }\r\n\r\n  onClickHandler = async (): Promise<any> => {\r\n    const url: string = 'https://securepay.tinkoff.ru/v2/Init'\r\n    const headers = {\r\n      'Content-Type': 'application/json',\r\n    }\r\n\r\n    const serviceName = 'Базовая тренировочная программа'\r\n    const servicePrice = 900\r\n    const serviceQuantity = 1\r\n\r\n    // Items Массив позиций чека с информацией о товарах.\r\n    const Items: Items[] = [\r\n      {\r\n        Amount: servicePrice * serviceQuantity,\r\n        Name: serviceName,\r\n        Price: servicePrice,\r\n        Quantity: serviceQuantity,\r\n        Tax: 'none',\r\n      },\r\n    ]\r\n\r\n    // Receipt Массив данных чека.\r\n    const Receipt: Receipt = {\r\n      Email: 'bck-dkiselev@yandex.ru',\r\n      Phone: '8-961-815-26-33',\r\n      Taxation: 'usn_income',\r\n      Items: Items,\r\n    }\r\n\r\n    // PaymentData\r\n    const Payment: TinkoffPay = {\r\n      TerminalKey: 'TinkoffBankTest',\r\n      OrderId: new Date().valueOf().toString(),\r\n      Amount: servicePrice * serviceQuantity,\r\n      Description: 'Тестовый платеж',\r\n      SuccessURL: '/successpay',\r\n      FailURL: '/failpay',\r\n      Receipt: Receipt,\r\n    }\r\n\r\n    // const res = await fetch(url, {\r\n    //   method: 'POST',\r\n    //   headers,\r\n    //   body: JSON.stringify(Payment)\r\n    // })\r\n\r\n    // console.log(await res.json())\r\n  }\r\n\r\n  formButtonClick = (): void => {\r\n    const formData = this.state.formData\r\n    formData.inputEmailTouched = true\r\n    formData.inputPhoneTouched = true\r\n    formData.agreeTouched = true\r\n    formData.emailValid = this.emailValidate(formData.email)\r\n    formData.phoneValid = this.phoneValidate(formData.phone)\r\n    formData.formValid = formData.emailValid && formData.phoneValid && formData.agree\r\n\r\n    if (formData.formValid) {\r\n      formData.loading = true\r\n      this.payTinkoff()\r\n    } else {\r\n      formData.showFormErrorMessage = true\r\n    }\r\n    this.setState({ formData })\r\n  }\r\n\r\n  phoneValidate = (phone: string): boolean => {\r\n    let filterPhone: string = ''\r\n    filterPhone = filterPhone + phone.match(/\\d/g)?.join('')\r\n    if (filterPhone.length < this.state.formData.minPhoneNumbers) {\r\n      return false\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n\r\n  emailValidate = (email: string): boolean => {\r\n    const reg = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/\r\n    if (!reg.test(email)) {\r\n      return false\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n\r\n  onEmailChange = (event: any): void => {\r\n    const formData = this.state.formData\r\n    formData.email = event.target.value\r\n    !formData.inputEmailTouched && (formData.inputEmailTouched = true)\r\n    formData.emailValid = this.emailValidate(formData.email)\r\n    formData.showFormErrorMessage = false\r\n\r\n    this.setState({ formData })\r\n  }\r\n\r\n  onPromoChange = (event: any): void => {\r\n    const formData = this.state.formData\r\n    formData.promoCode = event.target.value\r\n    formData.promoCodeValid = true\r\n\r\n    this.setState({ formData })\r\n  }\r\n\r\n  onPhoneChange = (event: any): void => {\r\n    const formData = this.state.formData\r\n    formData.phone = event.target.value\r\n    !formData.inputPhoneTouched && (formData.inputPhoneTouched = true)\r\n    formData.phoneValid = this.phoneValidate(formData.phone)\r\n    formData.showFormErrorMessage = false\r\n\r\n    this.setState({ formData })\r\n  }\r\n\r\n  checkboxHandler = (): void => {\r\n    const formData = this.state.formData\r\n    formData.agree = !formData.agree\r\n    formData.agreeTouched = true\r\n    formData.showFormErrorMessage = false\r\n    this.setState({ formData })\r\n  }\r\n\r\n  executePromo = (): void => {\r\n    const promoCodes: PromoCodes[] = Config.promoCodes\r\n    const promoEntry = this.state.formData.promoCode\r\n    const formData = this.state.formData\r\n    let discount = 0\r\n    promoCodes.map((promoCode) => {\r\n      promoCode.codeList.map((promo) => {\r\n        if (promo.toLowerCase() === promoEntry.toLowerCase()) {\r\n          discount = promoCode.discount\r\n        }\r\n      })\r\n    })\r\n\r\n    if (discount > 0) {\r\n      const payment: TinkoffPay = this.props.order.payment\r\n      let amount = 0\r\n      payment.Receipt?.Items.map((item) => {\r\n        const price = ((100 - discount) / 100) * item.Price\r\n        item.Price = price\r\n        item.Amount = price\r\n        amount = amount + price\r\n      })\r\n\r\n      payment.Amount = amount\r\n      this.props.setOrderPayment(payment)\r\n      formData.discount = discount\r\n      formData.promoExecuted = true\r\n      this.setState({ formData })\r\n    } else {\r\n      formData.promoCodeValid = false\r\n      this.setState({ formData })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid className=\"PayBlock m-0 p-0\">\r\n        <Row className=\"PayBlock__formHeader m-0 d-flex justify-content-center\">\r\n          <h1>{this.props.order.payment.Description}</h1>\r\n        </Row>\r\n        <Row className=\"PayBlock__descr m-0 d-flex justify-content-center\">\r\n          {this.props.order.payment.Receipt\r\n            ? this.props.order.payment.Receipt.Items.map((item, index) => {\r\n                if (this.props.order.payment.Description !== item.Name) {\r\n                  return <div key={index}>{item.Name}</div>\r\n                }\r\n              })\r\n            : null}\r\n        </Row>\r\n        <Row className=\"PayBlock__fieldsList m-0\">\r\n          <Col className=\"PayBlock__fieldsListCont\">\r\n            <div className=\"PayBlock__inputCont\">\r\n              <h3>Ваш E-mail</h3>\r\n              <input\r\n                type=\"email\"\r\n                className={`PayBlock__input ${\r\n                  this.state.formData.inputEmailTouched\r\n                    ? this.state.formData.emailValid\r\n                      ? 'inputValid'\r\n                      : 'inputInvalid'\r\n                    : null\r\n                } `}\r\n                value={this.state.formData.email}\r\n                placeholder=\"example@domain.com\"\r\n                name=\"email\"\r\n                onChange={(event) => this.onEmailChange(event)}\r\n              />\r\n              {this.state.formData.inputEmailTouched && !this.state.formData.emailValid ? (\r\n                <small className=\"RequestFormModal__inputErrorMessage\">Введите корректный email.</small>\r\n              ) : null}\r\n            </div>\r\n\r\n            <div className=\"PayBlock__inputCont\">\r\n              <h3>Номер телефона</h3>\r\n              <ReactInputMask\r\n                mask=\"+7 (999) 999-99-99\"\r\n                className={`PayBlock__input ${\r\n                  this.state.formData.inputPhoneTouched\r\n                    ? this.state.formData.phoneValid\r\n                      ? 'inputValid'\r\n                      : 'inputInvalid'\r\n                    : null\r\n                } `}\r\n                type=\"tel\"\r\n                name=\"phone\"\r\n                placeholder=\"+7 (___) ___-__-__\"\r\n                value={this.state.formData.phone}\r\n                onChange={(event) => this.onPhoneChange(event)}\r\n              />\r\n\r\n              {this.state.formData.inputPhoneTouched && !this.state.formData.phoneValid ? (\r\n                <small className=\"RequestFormModal__inputErrorMessage\">Введите корректный телефонный номер.</small>\r\n              ) : null}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row\r\n          className={`PayBlock__checkboxRow m-0 ${\r\n            this.state.formData.agreeTouched && !this.state.formData.agree ? 'checkBoxInvalid' : ''\r\n          }`}\r\n        >\r\n          <Col\r\n            xs={2}\r\n            className=\"PayBlock__checkbox d-flex justify-content-center pt-2\"\r\n            onClick={() => this.checkboxHandler()}\r\n          >\r\n            <input\r\n              key={this.state.formData.agree.toString()}\r\n              className=\"PayBlock__check\"\r\n              type=\"checkbox\"\r\n              name=\"agree\"\r\n              checked={this.state.formData.agree}\r\n              readOnly={true}\r\n            />\r\n          </Col>\r\n          <Col xs={10} className=\"PayBlock__checkboxTitle\">\r\n            Я ознакомился с{' '}\r\n            <a href=\"#\" target=\"_blank\">\r\n              политикой использования персональных данных\r\n            </a>{' '}\r\n            и с{' '}\r\n            <a href={`${Config.siteURL}/dogovor.pdf`} target=\"_blank\">\r\n              условиями договора на оказание услуг\r\n            </a>\r\n          </Col>\r\n        </Row>\r\n\r\n        {!this.state.formData.promoExecuted ? (\r\n          <Row className=\"PayBlock__promoCode PayBlock__inputCont\">\r\n            <Col xs={6} className=\"PayBlock__promoTextBlock\">\r\n              <input\r\n                type=\"string\"\r\n                className={`PayBlock__input ${!this.state.formData.promoCodeValid ? 'inputInvalid' : ''}`}\r\n                value={this.state.formData.promoCode}\r\n                name=\"promo\"\r\n                placeholder=\"промо код\"\r\n                autoComplete=\"off\"\r\n                onChange={(event) => this.onPromoChange(event)}\r\n              />\r\n            </Col>\r\n            <Col xs={6} className=\"PayBlock__promoButton\">\r\n              <Button text=\"Применить\" buttonHandler={() => this.executePromo()} />\r\n            </Col>\r\n          </Row>\r\n        ) : (\r\n          <Row className=\"PayBlock__promoCodeEx justify-content-center\">\r\n            Вы успешно активировали промо код на {this.state.formData.discount}% скидку\r\n          </Row>\r\n        )}\r\n\r\n        <Row className=\"PayBlock__finalPriceCont d-flex justify-content-between align-items-center\">\r\n          <div className=\"PayBlock__finalPriceTitle\">Стоимость</div>\r\n          <div className=\"PayBlock__finalPrice\">\r\n            <span>{this.props.order.payment.Amount / 100}</span> Р\r\n          </div>\r\n        </Row>\r\n\r\n        {this.state.formData.showFormErrorMessage ? (\r\n          <Row className=\"PayBlock__formErrorMessage d-flex justify-content-center align-items-center\">\r\n            Заполните корректно все поля формы!\r\n          </Row>\r\n        ) : null}\r\n\r\n        {this.state.formData.loading ? (\r\n          <Row className=\"PayBlock__loading d-flex justify-content-center\">\r\n            <div className=\"lds-ellipsis\">\r\n              <div></div>\r\n              <div></div>\r\n              <div></div>\r\n              <div></div>\r\n            </div>\r\n          </Row>\r\n        ) : (\r\n          <Row className=\"PayBlock__buttonCont\" onClick={() => this.formButtonClick()}>\r\n            <div\r\n              className={`PayBlock__button w-100 d-flex justify-content-center align-items-center ${\r\n                this.state.formData.agree ? 'active' : 'disabled'\r\n              }`}\r\n            >\r\n              Купить сейчас\r\n            </div>\r\n          </Row>\r\n        )}\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setShowPaymentModal,\r\n  setOrderPayment,\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => {\r\n  const modal = state.modal\r\n  const order = state.order\r\n  return {\r\n    modal,\r\n    order,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PayBlock)\r\n",["130","131"],"C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block8\\Block8.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\PriceBlock\\PriceBlock.tsx",["132","133"],"C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\MainLayout.tsx",["134"],"C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\BeforeAfterBlock\\BeforeAfterBlock.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\index.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\MainFooter\\MainFooter.tsx",[],["135","136"],"C:\\GitHub\\repositories\\gromov\\src\\Layouts\\AdminLayout\\Pages\\AdminPage\\AdminPage.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\Layouts\\AdminLayout\\Pages\\AdminProfile\\AdminProfile.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\IconButton\\IconButton.tsx",["137","138"],"import React from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\nimport './IconButton.scss'\r\n\r\ninterface IconButtonProps {\r\n  width?: string\r\n  height?: string\r\n  icon: string\r\n  textColor: string\r\n  text: string\r\n  bgColor?: string\r\n  shadow?: string\r\n  bold?: any\r\n  borderRadius?: string\r\n  element: number\r\n  clickHandler: (element: number) => void\r\n}\r\n\r\ninterface IconButtonState {}\r\n\r\nclass IconButton extends React.Component<IconButtonProps, IconButtonState> {\r\n  render() {\r\n    return (\r\n      <Container\r\n        fluid\r\n        className=\"IconButton p-0 d-flex justify-content-center align-items-center\"\r\n        style={{\r\n          width: this.props.width ? this.props.width : '',\r\n          height: this.props.height ? this.props.height : '',\r\n          backgroundColor: this.props.bgColor ? this.props.bgColor : '#ffffff',\r\n          boxShadow: this.props.shadow ? this.props.shadow : 'none',\r\n          borderRadius: this.props.borderRadius ? this.props.borderRadius : '0px',\r\n        }}\r\n        onClick={() => this.props.clickHandler(this.props.element)}\r\n      >\r\n          <div className=\"p-4 m-0 d-flex align-items-center justify-content-center\">\r\n            <div className=\"m-0 p-0 pr-2 d-flex align-items-center justify-content-center\">\r\n              <img className=\"img-fluid\" src={this.props.icon} alt=\"\" />\r\n            </div>\r\n            <div\r\n              className=\"IconButton__text m-0 p-0 d-flex align-items-center justify-content-start\"\r\n              style={{\r\n                color: this.props.textColor,\r\n                fontWeight: this.props.bold ? 'bold' : 'normal',\r\n              }}\r\n            >\r\n              {this.props.text}\r\n            </div>\r\n          </div>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default IconButton\r\n","C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\SuccessPay\\SuccessPay.tsx",["139","140"],"C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\MobileMenu\\MobileMenu.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\ExclusiveCard\\ExclusiveCard.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block1\\Block1.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\QuizPage\\QuizPage.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Exclusive\\Exclusive.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block3\\Block3.tsx",["141","142","143"],"C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\RoundButton\\RoundButton.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Second\\Second.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\FailedPay\\FailedPay.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\App.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Main.tsx",["144"],"C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\MainBody\\MainBody.tsx",[],{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":48,"column":11,"nodeType":"151","messageId":"152","endLine":48,"endColumn":20},{"ruleId":"149","severity":1,"message":"153","line":134,"column":11,"nodeType":"151","messageId":"152","endLine":134,"endColumn":22},{"ruleId":"149","severity":1,"message":"154","line":135,"column":11,"nodeType":"151","messageId":"152","endLine":135,"endColumn":18},{"ruleId":"149","severity":1,"message":"155","line":163,"column":11,"nodeType":"151","messageId":"152","endLine":163,"endColumn":30},{"ruleId":"156","severity":1,"message":"157","line":211,"column":33,"nodeType":"158","messageId":"159","endLine":211,"endColumn":34,"suggestions":"160"},{"ruleId":"156","severity":1,"message":"161","line":211,"column":38,"nodeType":"158","messageId":"159","endLine":211,"endColumn":39,"suggestions":"162"},{"ruleId":"156","severity":1,"message":"157","line":211,"column":54,"nodeType":"158","messageId":"159","endLine":211,"endColumn":55,"suggestions":"163"},{"ruleId":"164","severity":1,"message":"165","line":260,"column":32,"nodeType":"166","messageId":"167","endLine":260,"endColumn":34},{"ruleId":"164","severity":1,"message":"165","line":261,"column":38,"nodeType":"166","messageId":"167","endLine":261,"endColumn":40},{"ruleId":"164","severity":1,"message":"165","line":271,"column":41,"nodeType":"166","messageId":"167","endLine":271,"endColumn":43},{"ruleId":"164","severity":1,"message":"168","line":297,"column":72,"nodeType":"166","messageId":"169","endLine":297,"endColumn":74},{"ruleId":"170","severity":1,"message":"171","line":372,"column":13,"nodeType":"172","endLine":372,"endColumn":41},{"ruleId":"173","severity":1,"message":"174","line":376,"column":55,"nodeType":"175","endLine":376,"endColumn":70},{"ruleId":"145","replacedBy":"176"},{"ruleId":"147","replacedBy":"177"},{"ruleId":"149","severity":1,"message":"178","line":2,"column":10,"nodeType":"151","messageId":"152","endLine":2,"endColumn":19},{"ruleId":"149","severity":1,"message":"179","line":2,"column":21,"nodeType":"151","messageId":"152","endLine":2,"endColumn":24},{"ruleId":"149","severity":1,"message":"180","line":8,"column":8,"nodeType":"151","messageId":"152","endLine":8,"endColumn":18},{"ruleId":"145","replacedBy":"181"},{"ruleId":"147","replacedBy":"182"},{"ruleId":"149","severity":1,"message":"183","line":2,"column":10,"nodeType":"151","messageId":"152","endLine":2,"endColumn":13},{"ruleId":"149","severity":1,"message":"179","line":2,"column":26,"nodeType":"151","messageId":"152","endLine":2,"endColumn":29},{"ruleId":"149","severity":1,"message":"184","line":14,"column":11,"nodeType":"151","messageId":"152","endLine":14,"endColumn":22},{"ruleId":"149","severity":1,"message":"150","line":20,"column":11,"nodeType":"151","messageId":"152","endLine":20,"endColumn":20},{"ruleId":"149","severity":1,"message":"185","line":3,"column":8,"nodeType":"151","messageId":"152","endLine":3,"endColumn":24},{"ruleId":"149","severity":1,"message":"186","line":5,"column":8,"nodeType":"151","messageId":"152","endLine":5,"endColumn":25},{"ruleId":"149","severity":1,"message":"187","line":6,"column":8,"nodeType":"151","messageId":"152","endLine":6,"endColumn":18},{"ruleId":"149","severity":1,"message":"188","line":18,"column":8,"nodeType":"151","messageId":"152","endLine":18,"endColumn":20},"no-native-reassign",["189"],"no-negated-in-lhs",["190"],"@typescript-eslint/no-unused-vars","'OrderData' is defined but never used.","Identifier","unusedVar","'url' is assigned a value but never used.","'headers' is assigned a value but never used.","'Payment' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["191","192"],"Unnecessary escape character: \\@.",["193","194"],["195","196"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["189"],["190"],"'Container' is defined but never used.","'Row' is defined but never used.","'MainHeader' is defined but never used.",["189"],["190"],"'Col' is defined but never used.","'RequestData' is defined but never used.","'BeforeAfterBlock' is defined but never used.","'DashedBorderBlock' is defined but never used.","'IconButton' is defined but never used.","'ComplexBlock' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"197","fix":"198","desc":"199"},{"messageId":"200","fix":"201","desc":"202"},{"messageId":"197","fix":"203","desc":"199"},{"messageId":"200","fix":"204","desc":"202"},{"messageId":"197","fix":"205","desc":"199"},{"messageId":"200","fix":"206","desc":"202"},"removeEscape",{"range":"207","text":"208"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"209","text":"210"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"211","text":"208"},{"range":"212","text":"210"},{"range":"213","text":"208"},{"range":"214","text":"210"},[5680,5681],"",[5680,5680],"\\",[5685,5686],[5685,5685],[5701,5702],[5701,5701]]
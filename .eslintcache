[{"C:\\GitHub\\repositories\\gromov\\src\\index.tsx":"1","C:\\GitHub\\repositories\\gromov\\src\\Redux\\actions\\modal.tsx":"2","C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block8\\Block8.tsx":"3","C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\BottomShadowBlock\\BottomShadowBlock.tsx":"4","C:\\GitHub\\repositories\\gromov\\src\\Config\\Config.tsx":"5","C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\PayBlock\\PayBlock.tsx":"6","C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\SuccessPay\\SuccessPay.tsx":"7","C:\\GitHub\\repositories\\gromov\\src\\Redux\\index.tsx":"8","C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\PriceBlock\\PriceBlock.tsx":"9","C:\\GitHub\\repositories\\gromov\\src\\Redux\\reducers\\app.tsx":"10","C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Certificates\\Certificates.tsx":"11","C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block10\\Block10.tsx":"12","C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\RoundButton\\RoundButton.tsx":"13","C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\IconButton\\IconButton.tsx":"14","C:\\GitHub\\repositories\\gromov\\src\\Layouts\\AdminLayout\\Pages\\AdminPage\\AdminPage.tsx":"15","C:\\GitHub\\repositories\\gromov\\src\\reportWebVitals.ts":"16","C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Second\\Second.tsx":"17","C:\\GitHub\\repositories\\gromov\\src\\Redux\\reducers\\modal.tsx":"18","C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block6\\Block6.tsx":"19","C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block4\\Block4.tsx":"20","C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block1\\Block1.tsx":"21","C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\BeforeAfterBlock\\BeforeAfterBlock.tsx":"22"},{"size":673,"mtime":1610377956354,"results":"23","hashOfConfig":"24"},{"size":630,"mtime":1614781508032,"results":"25","hashOfConfig":"24"},{"size":8934,"mtime":1612287659885,"results":"26","hashOfConfig":"24"},{"size":2127,"mtime":1610377952655,"results":"27","hashOfConfig":"24"},{"size":7181,"mtime":1615710092848,"results":"28","hashOfConfig":"24"},{"size":11961,"mtime":1615709525332,"results":"29","hashOfConfig":"24"},{"size":4715,"mtime":1615710294528,"results":"30","hashOfConfig":"24"},{"size":419,"mtime":1615215514561,"results":"31","hashOfConfig":"24"},{"size":604,"mtime":1610991707596,"results":"32","hashOfConfig":"24"},{"size":753,"mtime":1610377952044,"results":"33","hashOfConfig":"24"},{"size":3219,"mtime":1615215514557,"results":"34","hashOfConfig":"24"},{"size":2191,"mtime":1614781508030,"results":"35","hashOfConfig":"24"},{"size":805,"mtime":1612284294422,"results":"36","hashOfConfig":"24"},{"size":1793,"mtime":1612283296083,"results":"37","hashOfConfig":"24"},{"size":408,"mtime":1610377950541,"results":"38","hashOfConfig":"24"},{"size":440,"mtime":1610377956458,"results":"39","hashOfConfig":"24"},{"size":379,"mtime":1610377951470,"results":"40","hashOfConfig":"24"},{"size":1417,"mtime":1614781508035,"results":"41","hashOfConfig":"24"},{"size":2308,"mtime":1612276491653,"results":"42","hashOfConfig":"24"},{"size":3583,"mtime":1612286935467,"results":"43","hashOfConfig":"24"},{"size":6867,"mtime":1614781508029,"results":"44","hashOfConfig":"24"},{"size":2131,"mtime":1612287908932,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"pgzerv",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"71"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\GitHub\\repositories\\gromov\\src\\index.tsx",[],["97","98"],"C:\\GitHub\\repositories\\gromov\\src\\Redux\\actions\\modal.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block8\\Block8.tsx",[],["99","100"],"C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\BottomShadowBlock\\BottomShadowBlock.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\Config\\Config.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\PayBlock\\PayBlock.tsx",["101","102","103","104","105","106","107","108","109","110"],"import React from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\nimport ReactInputMask from 'react-input-mask'\r\nimport { connect } from 'react-redux'\r\nimport { Items } from '../../Interfaces/Items'\r\nimport { Receipt } from '../../Interfaces/Receipt'\r\nimport { TinkoffPay } from '../../Interfaces/TinkoffPay'\r\nimport { RootState } from '../../Redux'\r\nimport { setShowPaymentModal } from '../../Redux/actions/modal'\r\nimport { ModalState, OrderState } from '../../Redux/interfaces/interfaces'\r\nimport { sha256 } from 'js-sha256'\r\n\r\nimport './PayBlock.scss'\r\nimport Config from '../../Config/Config'\r\n\r\ninterface PayBlockProps {\r\n  modal: ModalState\r\n  order: OrderState\r\n  setShowPaymentModal: (isActive: boolean) => void\r\n}\r\n\r\ninterface PayBlockState {\r\n  formData: {\r\n    phone: string\r\n    phoneValid: boolean\r\n    email: string\r\n    emailValid: boolean\r\n    inputPhoneTouched: boolean\r\n    inputEmailTouched: boolean\r\n    minPhoneNumbers: number\r\n    checkbox: boolean\r\n    formValid: boolean\r\n    agreeTouched: boolean\r\n    agree: boolean\r\n    showFormErrorMessage: boolean\r\n    loading: boolean\r\n  }\r\n}\r\n\r\ninterface OrderData {\r\n  email: string\r\n  phone: string\r\n  PaymentId: string\r\n  itemName: string\r\n  Token: string\r\n}\r\n\r\nclass PayBlock extends React.Component<PayBlockProps, PayBlockState> {\r\n  constructor(props: PayBlockProps) {\r\n    super(props)\r\n    this.state = {\r\n      formData: {\r\n        phone: '',\r\n        phoneValid: false,\r\n        email: '',\r\n        emailValid: false,\r\n        inputPhoneTouched: false,\r\n        inputEmailTouched: false,\r\n        minPhoneNumbers: 11,\r\n        checkbox: true,\r\n        formValid: false,\r\n        agreeTouched: false,\r\n        agree: false,\r\n        showFormErrorMessage: false,\r\n        loading: false,\r\n      },\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    \r\n  }\r\n\r\n  payTinkoff = async (): Promise<any> => {\r\n    const url: string = 'https://securepay.tinkoff.ru/v2/Init'\r\n    const headers = {\r\n      'Content-Type': 'application/json',\r\n    }\r\n\r\n    const payment: TinkoffPay = this.props.order.payment\r\n\r\n    let Token: string = ''\r\n    \r\n    Token = Token.concat(\r\n      payment.Amount.toString(),\r\n      payment.Description,\r\n      payment.OrderId,\r\n      Config.TerminalPassword,\r\n      Config.TerminalKey\r\n    )\r\n    // console.log(Token)\r\n    Token = sha256(Token)\r\n    // console.log(Token)\r\n\r\n    payment.Token = Token\r\n\r\n    if (payment.Receipt) {\r\n      payment.Receipt.Email = this.state.formData.email\r\n      payment.Receipt.Phone = this.state.formData.phone\r\n    }\r\n\r\n    // console.log(payment)\r\n\r\n    const res = await fetch(url, {\r\n      method: 'POST',\r\n      headers,\r\n      body: JSON.stringify(payment),\r\n    })\r\n\r\n    const paymentResult = await res.json()\r\n\r\n    // console.log(paymentResult)\r\n\r\n    if (paymentResult.PaymentId) {\r\n      localStorage.setItem('payment', JSON.stringify(payment))\r\n\r\n      window.open(paymentResult.PaymentURL, '_self')\r\n    } else {\r\n      window.open(payment.FailURL, '_self')\r\n    }\r\n  }\r\n\r\n  onClickHandler = async (): Promise<any> => {\r\n    const url: string = 'https://securepay.tinkoff.ru/v2/Init'\r\n    const headers = {\r\n      'Content-Type': 'application/json',\r\n    }\r\n\r\n    const serviceName = 'Базовая тренировочная программа'\r\n    const servicePrice = 900\r\n    const serviceQuantity = 1\r\n\r\n    // Items Массив позиций чека с информацией о товарах.\r\n    const Items: Items[] = [\r\n      {\r\n        Amount: servicePrice * serviceQuantity,\r\n        Name: serviceName,\r\n        Price: servicePrice,\r\n        Quantity: serviceQuantity,\r\n        Tax: 'none',\r\n      },\r\n    ]\r\n\r\n    // Receipt Массив данных чека.\r\n    const Receipt: Receipt = {\r\n      Email: 'bck-dkiselev@yandex.ru',\r\n      Phone: '8-961-815-26-33',\r\n      Taxation: 'usn_income',\r\n      Items: Items,\r\n    }\r\n\r\n    // PaymentData\r\n    const Payment: TinkoffPay = {\r\n      TerminalKey: 'TinkoffBankTest',\r\n      OrderId: new Date().valueOf().toString(),\r\n      Amount: servicePrice * serviceQuantity,\r\n      Description: 'Тестовый платеж',\r\n      SuccessURL: '/successpay',\r\n      FailURL: '/failpay',\r\n      Receipt: Receipt,\r\n    }\r\n\r\n    // const res = await fetch(url, {\r\n    //   method: 'POST',\r\n    //   headers,\r\n    //   body: JSON.stringify(Payment)\r\n    // })\r\n\r\n    // console.log(await res.json())\r\n  }\r\n\r\n  formButtonClick = (): void => {\r\n    const formData = this.state.formData\r\n    formData.inputEmailTouched = true\r\n    formData.inputPhoneTouched = true\r\n    formData.agreeTouched = true\r\n    formData.emailValid = this.emailValidate(formData.email)\r\n    formData.phoneValid = this.phoneValidate(formData.phone)\r\n    formData.formValid = formData.emailValid && formData.phoneValid && formData.agree\r\n\r\n    if (formData.formValid) {\r\n      formData.loading = true\r\n      this.payTinkoff()\r\n    } else {\r\n      formData.showFormErrorMessage = true\r\n    }\r\n    this.setState({ formData })\r\n  }\r\n\r\n  phoneValidate = (phone: string): boolean => {\r\n    let filterPhone: string = ''\r\n    filterPhone = filterPhone + phone.match(/\\d/g)?.join('')\r\n    if (filterPhone.length < this.state.formData.minPhoneNumbers) {\r\n      return false\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n\r\n  emailValidate = (email: string): boolean => {\r\n    const reg = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/\r\n    if (!reg.test(email)) {\r\n      return false\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n\r\n  onEmailChange = (event: any): void => {\r\n    const formData = this.state.formData\r\n    formData.email = event.target.value\r\n    !formData.inputEmailTouched && (formData.inputEmailTouched = true)\r\n    formData.emailValid = this.emailValidate(formData.email)\r\n    formData.showFormErrorMessage = false\r\n\r\n    this.setState({ formData })\r\n  }\r\n\r\n  onPhoneChange = (event: any): void => {\r\n    const formData = this.state.formData\r\n    formData.phone = event.target.value\r\n    !formData.inputPhoneTouched && (formData.inputPhoneTouched = true)\r\n    formData.phoneValid = this.phoneValidate(formData.phone)\r\n    formData.showFormErrorMessage = false\r\n\r\n    this.setState({ formData })\r\n  }\r\n\r\n  checkboxHandler = (): void => {\r\n    const formData = this.state.formData\r\n    formData.agree = !formData.agree\r\n    formData.agreeTouched = true\r\n    formData.showFormErrorMessage = false\r\n    this.setState({ formData })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid className=\"PayBlock m-0 p-0\">\r\n        <Row className=\"PayBlock__formHeader m-0 d-flex justify-content-center\">\r\n          <h1>{this.props.order.payment.Description}</h1>\r\n        </Row>\r\n        <Row className=\"PayBlock__descr m-0 d-flex justify-content-center\">\r\n          {this.props.order.payment.Receipt\r\n            ? this.props.order.payment.Receipt.Items.map((item, index) => {\r\n                if (this.props.order.payment.Description !== item.Name) {\r\n                  return <div key={index}>{item.Name}</div>\r\n                }\r\n              })\r\n            : null}\r\n        </Row>\r\n        <Row className=\"PayBlock__fieldsList m-0\">\r\n          <Col className=\"PayBlock__fieldsListCont\">\r\n            <div className=\"PayBlock__inputCont\">\r\n              <h3>Ваш E-mail</h3>\r\n              <input\r\n                type=\"email\"\r\n                className={`PayBlock__input ${\r\n                  this.state.formData.inputEmailTouched\r\n                    ? this.state.formData.emailValid\r\n                      ? 'inputValid'\r\n                      : 'inputInvalid'\r\n                    : null\r\n                } `}\r\n                value={this.state.formData.email}\r\n                placeholder=\"example@domain.com\"\r\n                name=\"email\"\r\n                onChange={(event) => this.onEmailChange(event)}\r\n              />\r\n              {this.state.formData.inputEmailTouched && !this.state.formData.emailValid ? (\r\n                <small className=\"RequestFormModal__inputErrorMessage\">Введите корректный email.</small>\r\n              ) : null}\r\n            </div>\r\n\r\n            <div className=\"PayBlock__inputCont\">\r\n              <h3>Номер телефона</h3>\r\n              <ReactInputMask\r\n                mask=\"+7 (999) 999-99-99\"\r\n                className={`PayBlock__input ${\r\n                  this.state.formData.inputPhoneTouched\r\n                    ? this.state.formData.phoneValid\r\n                      ? 'inputValid'\r\n                      : 'inputInvalid'\r\n                    : null\r\n                } `}\r\n                type=\"tel\"\r\n                name=\"phone\"\r\n                placeholder=\"+7 (___) ___-__-__\"\r\n                value={this.state.formData.phone}\r\n                onChange={(event) => this.onPhoneChange(event)}\r\n              />\r\n\r\n              {this.state.formData.inputPhoneTouched && !this.state.formData.phoneValid ? (\r\n                <small className=\"RequestFormModal__inputErrorMessage\">Введите корректный телефонный номер.</small>\r\n              ) : null}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row\r\n          className={`PayBlock__checkboxRow m-0 ${\r\n            this.state.formData.agreeTouched && !this.state.formData.agree ? 'checkBoxInvalid' : ''\r\n          }`}\r\n        >\r\n          <Col\r\n            xs={2}\r\n            className=\"PayBlock__checkbox d-flex justify-content-center pt-2\"\r\n            onClick={() => this.checkboxHandler()}\r\n          >\r\n            <input\r\n              key={this.state.formData.agree.toString()}\r\n              className=\"PayBlock__check\"\r\n              type=\"checkbox\"\r\n              name=\"agree\"\r\n              checked={this.state.formData.agree}\r\n              readOnly={true}\r\n            />\r\n          </Col>\r\n          <Col xs={10} className=\"PayBlock__checkboxTitle\">\r\n            Я ознакомился с{' '}\r\n            <a href=\"#\" target=\"_blank\">\r\n              политикой использования персональных данных\r\n            </a>{' '}\r\n            и с{' '}\r\n            <a href={`${Config.siteURL}/dogovor.pdf`} target=\"_blank\">\r\n              условиями договора на оказание услуг\r\n            </a>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"PayBlock__finalPriceCont d-flex justify-content-between align-items-center\">\r\n          <div className=\"PayBlock__finalPriceTitle\">Стоимость</div>\r\n          <div className=\"PayBlock__finalPrice\">\r\n            <span>{this.props.order.payment.Amount / 100}</span> Р\r\n          </div>\r\n        </Row>\r\n\r\n        {this.state.formData.showFormErrorMessage ? (\r\n          <Row className=\"PayBlock__formErrorMessage d-flex justify-content-center align-items-center\">\r\n            Заполните корректно все поля формы!\r\n          </Row>\r\n        ) : null}\r\n\r\n        {this.state.formData.loading ? (\r\n          <Row className=\"PayBlock__loading d-flex justify-content-center\">\r\n            <div className=\"lds-ellipsis\">\r\n              <div></div>\r\n              <div></div>\r\n              <div></div>\r\n              <div></div>\r\n            </div>\r\n          </Row>\r\n        ) : (\r\n          <Row className=\"PayBlock__buttonCont\" onClick={() => this.formButtonClick()}>\r\n            <div\r\n              className={`PayBlock__button w-100 d-flex justify-content-center align-items-center ${\r\n                this.state.formData.agree ? 'active' : 'disabled'\r\n              }`}\r\n            >\r\n              Купить сейчас\r\n            </div>\r\n          </Row>\r\n        )}\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setShowPaymentModal,\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => {\r\n  const modal = state.modal\r\n  const order = state.order\r\n  return {\r\n    modal,\r\n    order,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PayBlock)\r\n","C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\SuccessPay\\SuccessPay.tsx",["111","112"],"C:\\GitHub\\repositories\\gromov\\src\\Redux\\index.tsx",["113"],"import { applyMiddleware, createStore } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers'\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\n\r\n// let store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\r\nlet store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport default store",["114","115"],"C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\PriceBlock\\PriceBlock.tsx",["116","117"],"C:\\GitHub\\repositories\\gromov\\src\\Redux\\reducers\\app.tsx",[],["118","119"],"C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Certificates\\Certificates.tsx",["120"],"import React from 'react'\r\nimport DashedBorderBlock from '../../../../../SharedComponents/DashedBorderBlock/DashedBorderBlock'\r\nimport { Swiper, SwiperSlide } from 'swiper/react'\r\nimport { Element } from 'react-scroll'\r\n\r\nimport 'swiper/swiper.scss'\r\n\r\nimport './Certificates.scss'\r\nimport { Container, Row } from 'react-bootstrap'\r\n\r\ninterface CertificatesProps {}\r\n\r\ninterface CertificatesState {\r\n  certificates: string[]\r\n}\r\n\r\nclass Certificates extends React.Component<CertificatesProps, CertificatesState> {\r\n  constructor(props: CertificatesProps) {\r\n    super(props)\r\n    this.state = {\r\n      certificates: [\r\n        '1.jpg',\r\n        '2.jpg',\r\n        '3.jpg',\r\n        '4.jpg',\r\n        '5.jpg',\r\n        '6.jpg',\r\n        '7.jpg',\r\n        '8.jpg',\r\n        '9.jpg',\r\n        '10.jpg',\r\n        '11.jpg',\r\n        '12.jpg',\r\n        '13.jpg',\r\n        '14.jpg',\r\n        '15.jpg',\r\n        '16.jpg',\r\n      ],\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Element name=\"Certificates\">\r\n        <Container className=\"Certificates d-block p-0\">\r\n          <Swiper\r\n            slidesPerView={1}\r\n            spaceBetween={10}\r\n            pagination={{ el: '.swiper-pagination', clickable: true }}\r\n            breakpoints={{\r\n              992: {\r\n                slidesPerView: 4,\r\n                spaceBetween: 10,\r\n              },\r\n              768: {\r\n                slidesPerView: 3,\r\n                spaceBetween: 10,\r\n              },\r\n              576: {\r\n                slidesPerView: 2,\r\n                spaceBetween: 10,\r\n              }\r\n            }}\r\n          >\r\n            {this.state.certificates.map((cert, index) => {\r\n              return (\r\n                <SwiperSlide key={index}>\r\n                  <div className=\"Certificates__slide d-flex justify-content-center align-items-center\">\r\n                    <img className=\"img-fluid\" src={`/img/cert/${cert}`} alt=\"\" />\r\n                  </div>\r\n                </SwiperSlide>\r\n              )\r\n            })}\r\n          </Swiper>\r\n          <Row className=\"Certificates__pagination m-0 d-flex justify-content-center pt-5\">\r\n            <div className=\"swiper-pagination\"></div>\r\n          </Row>\r\n        </Container>\r\n\r\n        {/* <Container fluid className=\"Certificates__Mobile d-block d-md-none p-0\">\r\n          <Swiper\r\n            slidesPerView={1}\r\n            centeredSlides={true}\r\n            spaceBetween={10}\r\n            pagination={{ el: '.swiper-paginationMobile', clickable: true }}\r\n          >\r\n            {this.state.certificates.map((cert, index) => {\r\n              return (\r\n                <SwiperSlide key={index}>\r\n                  <div className=\"Certificates__slide d-flex justify-content-center align-items-center\">\r\n                    <img className=\"img-fluid\" src={`/img/cert/${cert}`} alt=\"\" />\r\n                  </div>\r\n                </SwiperSlide>\r\n              )\r\n            })}\r\n          </Swiper>\r\n          <Row className=\"Certificates__pagination m-0 d-flex justify-content-center pt-5\">          \r\n            <div className=\"swiper-paginationMobile\"></div>  \r\n          </Row>\r\n        </Container> */}\r\n      </Element>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Certificates\r\n","C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block10\\Block10.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\RoundButton\\RoundButton.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\IconButton\\IconButton.tsx",["121","122"],"C:\\GitHub\\repositories\\gromov\\src\\Layouts\\AdminLayout\\Pages\\AdminPage\\AdminPage.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\reportWebVitals.ts",[],"C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Second\\Second.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\Redux\\reducers\\modal.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block6\\Block6.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block4\\Block4.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block1\\Block1.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\BeforeAfterBlock\\BeforeAfterBlock.tsx",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"123","replacedBy":"127"},{"ruleId":"125","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":40,"column":11,"nodeType":"131","messageId":"132","endLine":40,"endColumn":20},{"ruleId":"129","severity":1,"message":"133","line":124,"column":11,"nodeType":"131","messageId":"132","endLine":124,"endColumn":22},{"ruleId":"129","severity":1,"message":"134","line":125,"column":11,"nodeType":"131","messageId":"132","endLine":125,"endColumn":18},{"ruleId":"129","severity":1,"message":"135","line":153,"column":11,"nodeType":"131","messageId":"132","endLine":153,"endColumn":30},{"ruleId":"136","severity":1,"message":"137","line":201,"column":33,"nodeType":"138","messageId":"139","endLine":201,"endColumn":34,"suggestions":"140"},{"ruleId":"136","severity":1,"message":"141","line":201,"column":38,"nodeType":"138","messageId":"139","endLine":201,"endColumn":39,"suggestions":"142"},{"ruleId":"136","severity":1,"message":"137","line":201,"column":54,"nodeType":"138","messageId":"139","endLine":201,"endColumn":55,"suggestions":"143"},{"ruleId":"144","severity":1,"message":"145","line":245,"column":72,"nodeType":"146","messageId":"147","endLine":245,"endColumn":74},{"ruleId":"148","severity":1,"message":"149","line":320,"column":13,"nodeType":"150","endLine":320,"endColumn":41},{"ruleId":"151","severity":1,"message":"152","line":324,"column":55,"nodeType":"153","endLine":324,"endColumn":70},{"ruleId":"129","severity":1,"message":"154","line":14,"column":11,"nodeType":"131","messageId":"132","endLine":14,"endColumn":22},{"ruleId":"129","severity":1,"message":"130","line":20,"column":11,"nodeType":"131","messageId":"132","endLine":20,"endColumn":20},{"ruleId":"129","severity":1,"message":"155","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":29},{"ruleId":"123","replacedBy":"156"},{"ruleId":"125","replacedBy":"157"},{"ruleId":"129","severity":1,"message":"158","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":19},{"ruleId":"129","severity":1,"message":"159","line":2,"column":21,"nodeType":"131","messageId":"132","endLine":2,"endColumn":24},{"ruleId":"123","replacedBy":"160"},{"ruleId":"125","replacedBy":"161"},{"ruleId":"129","severity":1,"message":"162","line":2,"column":8,"nodeType":"131","messageId":"132","endLine":2,"endColumn":25},{"ruleId":"129","severity":1,"message":"163","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":13},{"ruleId":"129","severity":1,"message":"159","line":2,"column":26,"nodeType":"131","messageId":"132","endLine":2,"endColumn":29},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],["164"],["165"],"@typescript-eslint/no-unused-vars","'OrderData' is defined but never used.","Identifier","unusedVar","'url' is assigned a value but never used.","'headers' is assigned a value but never used.","'Payment' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["166","167"],"Unnecessary escape character: \\@.",["168","169"],["170","171"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'RequestData' is defined but never used.","'composeWithDevTools' is defined but never used.",["164"],["165"],"'Container' is defined but never used.","'Row' is defined but never used.",["164"],["165"],"'DashedBorderBlock' is defined but never used.","'Col' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"172","fix":"173","desc":"174"},{"messageId":"175","fix":"176","desc":"177"},{"messageId":"172","fix":"178","desc":"174"},{"messageId":"175","fix":"179","desc":"177"},{"messageId":"172","fix":"180","desc":"174"},{"messageId":"175","fix":"181","desc":"177"},"removeEscape",{"range":"182","text":"183"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"184","text":"185"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"186","text":"183"},{"range":"187","text":"185"},{"range":"188","text":"183"},{"range":"189","text":"185"},[5280,5281],"",[5280,5280],"\\",[5285,5286],[5285,5285],[5301,5302],[5301,5301]]
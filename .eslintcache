[{"C:\\GitHub\\repositories\\gromov\\src\\index.tsx":"1","C:\\GitHub\\repositories\\gromov\\src\\Redux\\actions\\modal.tsx":"2","C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block8\\Block8.tsx":"3","C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\BottomShadowBlock\\BottomShadowBlock.tsx":"4","C:\\GitHub\\repositories\\gromov\\src\\Config\\Config.tsx":"5","C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\PayBlock\\PayBlock.tsx":"6","C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\SuccessPay\\SuccessPay.tsx":"7","C:\\GitHub\\repositories\\gromov\\src\\Redux\\index.tsx":"8","C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\PriceBlock\\PriceBlock.tsx":"9","C:\\GitHub\\repositories\\gromov\\src\\Redux\\reducers\\app.tsx":"10","C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Certificates\\Certificates.tsx":"11","C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block10\\Block10.tsx":"12","C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\RoundButton\\RoundButton.tsx":"13","C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\IconButton\\IconButton.tsx":"14","C:\\GitHub\\repositories\\gromov\\src\\Layouts\\AdminLayout\\Pages\\AdminPage\\AdminPage.tsx":"15","C:\\GitHub\\repositories\\gromov\\src\\reportWebVitals.ts":"16","C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Second\\Second.tsx":"17","C:\\GitHub\\repositories\\gromov\\src\\Redux\\reducers\\modal.tsx":"18","C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block6\\Block6.tsx":"19","C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block4\\Block4.tsx":"20","C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block1\\Block1.tsx":"21","C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\BeforeAfterBlock\\BeforeAfterBlock.tsx":"22","C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\MainFooter\\MainFooter.tsx":"23","C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Main.tsx":"24","C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\MainBody\\MainBody.tsx":"25","C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\HelmetMetaTags\\HelmetMetaTags.tsx":"26","C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\MirrorHeader\\MirrorHeader.tsx":"27","C:\\GitHub\\repositories\\gromov\\src\\Layouts\\AdminLayout\\Pages\\AdminProfile\\AdminProfile.tsx":"28","C:\\GitHub\\repositories\\gromov\\src\\Redux\\actions\\order.tsx":"29","C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block9\\Block9.tsx":"30","C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\DashedBorderBlock\\DashedBorderBlock.tsx":"31","C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\FailedPay\\FailedPay.tsx":"32","C:\\GitHub\\repositories\\gromov\\src\\Redux\\reducers\\index.tsx":"33","C:\\GitHub\\repositories\\gromov\\src\\Redux\\constants\\ActionTypes.tsx":"34","C:\\GitHub\\repositories\\gromov\\src\\App.tsx":"35","C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\MobileMenu\\MobileMenu.tsx":"36","C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\AdditionalServices\\AdditionalServices.tsx":"37","C:\\GitHub\\repositories\\gromov\\src\\Layouts\\AdminLayout\\AdminLayout.tsx":"38","C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block5\\Block5.tsx":"39","C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\Button\\Button.tsx":"40"},{"size":673,"mtime":1610377956354,"results":"41","hashOfConfig":"42"},{"size":630,"mtime":1614781508032,"results":"43","hashOfConfig":"42"},{"size":8935,"mtime":1615818610363,"results":"44","hashOfConfig":"42"},{"size":2127,"mtime":1610377952655,"results":"45","hashOfConfig":"42"},{"size":7181,"mtime":1615710092848,"results":"46","hashOfConfig":"42"},{"size":11961,"mtime":1615709525332,"results":"47","hashOfConfig":"42"},{"size":4715,"mtime":1615710294528,"results":"48","hashOfConfig":"42"},{"size":419,"mtime":1615215514561,"results":"49","hashOfConfig":"42"},{"size":604,"mtime":1610991707596,"results":"50","hashOfConfig":"42"},{"size":753,"mtime":1610377952044,"results":"51","hashOfConfig":"42"},{"size":3219,"mtime":1615215514557,"results":"52","hashOfConfig":"42"},{"size":2191,"mtime":1614781508030,"results":"53","hashOfConfig":"42"},{"size":805,"mtime":1612284294422,"results":"54","hashOfConfig":"42"},{"size":1793,"mtime":1612283296083,"results":"55","hashOfConfig":"42"},{"size":408,"mtime":1610377950541,"results":"56","hashOfConfig":"42"},{"size":440,"mtime":1610377956458,"results":"57","hashOfConfig":"42"},{"size":379,"mtime":1610377951470,"results":"58","hashOfConfig":"42"},{"size":1417,"mtime":1614781508035,"results":"59","hashOfConfig":"42"},{"size":2308,"mtime":1612276491653,"results":"60","hashOfConfig":"42"},{"size":3614,"mtime":1615743221591,"results":"61","hashOfConfig":"42"},{"size":6867,"mtime":1614781508029,"results":"62","hashOfConfig":"42"},{"size":2131,"mtime":1612287908932,"results":"63","hashOfConfig":"42"},{"size":394,"mtime":1610382772571,"results":"64","hashOfConfig":"42"},{"size":1461,"mtime":1615739290494,"results":"65","hashOfConfig":"42"},{"size":409,"mtime":1610377950776,"results":"66","hashOfConfig":"42"},{"size":934,"mtime":1615739578790,"results":"67","hashOfConfig":"42"},{"size":989,"mtime":1610991412658,"results":"68","hashOfConfig":"42"},{"size":496,"mtime":1610377950646,"results":"69","hashOfConfig":"42"},{"size":226,"mtime":1610377951629,"results":"70","hashOfConfig":"42"},{"size":3566,"mtime":1615818683898,"results":"71","hashOfConfig":"42"},{"size":1977,"mtime":1612288300618,"results":"72","hashOfConfig":"42"},{"size":1047,"mtime":1613310569562,"results":"73","hashOfConfig":"42"},{"size":229,"mtime":1610377952096,"results":"74","hashOfConfig":"42"},{"size":722,"mtime":1614781508033,"results":"75","hashOfConfig":"42"},{"size":1698,"mtime":1614781508026,"results":"76","hashOfConfig":"42"},{"size":5135,"mtime":1615818111470,"results":"77","hashOfConfig":"42"},{"size":27671,"mtime":1615818522903,"results":"78","hashOfConfig":"42"},{"size":1174,"mtime":1610377950435,"results":"79","hashOfConfig":"42"},{"size":4028,"mtime":1612286730385,"results":"80","hashOfConfig":"42"},{"size":443,"mtime":1610981246323,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"pgzerv",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"110"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"84"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\GitHub\\repositories\\gromov\\src\\index.tsx",[],["176","177"],"C:\\GitHub\\repositories\\gromov\\src\\Redux\\actions\\modal.tsx",[],["178","179"],"C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block8\\Block8.tsx",[],["180","181"],"C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\BottomShadowBlock\\BottomShadowBlock.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\Config\\Config.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\PayBlock\\PayBlock.tsx",["182","183","184","185","186","187","188","189","190","191"],"import React from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\nimport ReactInputMask from 'react-input-mask'\r\nimport { connect } from 'react-redux'\r\nimport { Items } from '../../Interfaces/Items'\r\nimport { Receipt } from '../../Interfaces/Receipt'\r\nimport { TinkoffPay } from '../../Interfaces/TinkoffPay'\r\nimport { RootState } from '../../Redux'\r\nimport { setShowPaymentModal } from '../../Redux/actions/modal'\r\nimport { ModalState, OrderState } from '../../Redux/interfaces/interfaces'\r\nimport { sha256 } from 'js-sha256'\r\n\r\nimport './PayBlock.scss'\r\nimport Config from '../../Config/Config'\r\n\r\ninterface PayBlockProps {\r\n  modal: ModalState\r\n  order: OrderState\r\n  setShowPaymentModal: (isActive: boolean) => void\r\n}\r\n\r\ninterface PayBlockState {\r\n  formData: {\r\n    phone: string\r\n    phoneValid: boolean\r\n    email: string\r\n    emailValid: boolean\r\n    inputPhoneTouched: boolean\r\n    inputEmailTouched: boolean\r\n    minPhoneNumbers: number\r\n    checkbox: boolean\r\n    formValid: boolean\r\n    agreeTouched: boolean\r\n    agree: boolean\r\n    showFormErrorMessage: boolean\r\n    loading: boolean\r\n  }\r\n}\r\n\r\ninterface OrderData {\r\n  email: string\r\n  phone: string\r\n  PaymentId: string\r\n  itemName: string\r\n  Token: string\r\n}\r\n\r\nclass PayBlock extends React.Component<PayBlockProps, PayBlockState> {\r\n  constructor(props: PayBlockProps) {\r\n    super(props)\r\n    this.state = {\r\n      formData: {\r\n        phone: '',\r\n        phoneValid: false,\r\n        email: '',\r\n        emailValid: false,\r\n        inputPhoneTouched: false,\r\n        inputEmailTouched: false,\r\n        minPhoneNumbers: 11,\r\n        checkbox: true,\r\n        formValid: false,\r\n        agreeTouched: false,\r\n        agree: false,\r\n        showFormErrorMessage: false,\r\n        loading: false,\r\n      },\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    \r\n  }\r\n\r\n  payTinkoff = async (): Promise<any> => {\r\n    const url: string = 'https://securepay.tinkoff.ru/v2/Init'\r\n    const headers = {\r\n      'Content-Type': 'application/json',\r\n    }\r\n\r\n    const payment: TinkoffPay = this.props.order.payment\r\n\r\n    let Token: string = ''\r\n    \r\n    Token = Token.concat(\r\n      payment.Amount.toString(),\r\n      payment.Description,\r\n      payment.OrderId,\r\n      Config.TerminalPassword,\r\n      Config.TerminalKey\r\n    )\r\n    // console.log(Token)\r\n    Token = sha256(Token)\r\n    // console.log(Token)\r\n\r\n    payment.Token = Token\r\n\r\n    if (payment.Receipt) {\r\n      payment.Receipt.Email = this.state.formData.email\r\n      payment.Receipt.Phone = this.state.formData.phone\r\n    }\r\n\r\n    // console.log(payment)\r\n\r\n    const res = await fetch(url, {\r\n      method: 'POST',\r\n      headers,\r\n      body: JSON.stringify(payment),\r\n    })\r\n\r\n    const paymentResult = await res.json()\r\n\r\n    // console.log(paymentResult)\r\n\r\n    if (paymentResult.PaymentId) {\r\n      localStorage.setItem('payment', JSON.stringify(payment))\r\n\r\n      window.open(paymentResult.PaymentURL, '_self')\r\n    } else {\r\n      window.open(payment.FailURL, '_self')\r\n    }\r\n  }\r\n\r\n  onClickHandler = async (): Promise<any> => {\r\n    const url: string = 'https://securepay.tinkoff.ru/v2/Init'\r\n    const headers = {\r\n      'Content-Type': 'application/json',\r\n    }\r\n\r\n    const serviceName = 'Базовая тренировочная программа'\r\n    const servicePrice = 900\r\n    const serviceQuantity = 1\r\n\r\n    // Items Массив позиций чека с информацией о товарах.\r\n    const Items: Items[] = [\r\n      {\r\n        Amount: servicePrice * serviceQuantity,\r\n        Name: serviceName,\r\n        Price: servicePrice,\r\n        Quantity: serviceQuantity,\r\n        Tax: 'none',\r\n      },\r\n    ]\r\n\r\n    // Receipt Массив данных чека.\r\n    const Receipt: Receipt = {\r\n      Email: 'bck-dkiselev@yandex.ru',\r\n      Phone: '8-961-815-26-33',\r\n      Taxation: 'usn_income',\r\n      Items: Items,\r\n    }\r\n\r\n    // PaymentData\r\n    const Payment: TinkoffPay = {\r\n      TerminalKey: 'TinkoffBankTest',\r\n      OrderId: new Date().valueOf().toString(),\r\n      Amount: servicePrice * serviceQuantity,\r\n      Description: 'Тестовый платеж',\r\n      SuccessURL: '/successpay',\r\n      FailURL: '/failpay',\r\n      Receipt: Receipt,\r\n    }\r\n\r\n    // const res = await fetch(url, {\r\n    //   method: 'POST',\r\n    //   headers,\r\n    //   body: JSON.stringify(Payment)\r\n    // })\r\n\r\n    // console.log(await res.json())\r\n  }\r\n\r\n  formButtonClick = (): void => {\r\n    const formData = this.state.formData\r\n    formData.inputEmailTouched = true\r\n    formData.inputPhoneTouched = true\r\n    formData.agreeTouched = true\r\n    formData.emailValid = this.emailValidate(formData.email)\r\n    formData.phoneValid = this.phoneValidate(formData.phone)\r\n    formData.formValid = formData.emailValid && formData.phoneValid && formData.agree\r\n\r\n    if (formData.formValid) {\r\n      formData.loading = true\r\n      this.payTinkoff()\r\n    } else {\r\n      formData.showFormErrorMessage = true\r\n    }\r\n    this.setState({ formData })\r\n  }\r\n\r\n  phoneValidate = (phone: string): boolean => {\r\n    let filterPhone: string = ''\r\n    filterPhone = filterPhone + phone.match(/\\d/g)?.join('')\r\n    if (filterPhone.length < this.state.formData.minPhoneNumbers) {\r\n      return false\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n\r\n  emailValidate = (email: string): boolean => {\r\n    const reg = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/\r\n    if (!reg.test(email)) {\r\n      return false\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n\r\n  onEmailChange = (event: any): void => {\r\n    const formData = this.state.formData\r\n    formData.email = event.target.value\r\n    !formData.inputEmailTouched && (formData.inputEmailTouched = true)\r\n    formData.emailValid = this.emailValidate(formData.email)\r\n    formData.showFormErrorMessage = false\r\n\r\n    this.setState({ formData })\r\n  }\r\n\r\n  onPhoneChange = (event: any): void => {\r\n    const formData = this.state.formData\r\n    formData.phone = event.target.value\r\n    !formData.inputPhoneTouched && (formData.inputPhoneTouched = true)\r\n    formData.phoneValid = this.phoneValidate(formData.phone)\r\n    formData.showFormErrorMessage = false\r\n\r\n    this.setState({ formData })\r\n  }\r\n\r\n  checkboxHandler = (): void => {\r\n    const formData = this.state.formData\r\n    formData.agree = !formData.agree\r\n    formData.agreeTouched = true\r\n    formData.showFormErrorMessage = false\r\n    this.setState({ formData })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid className=\"PayBlock m-0 p-0\">\r\n        <Row className=\"PayBlock__formHeader m-0 d-flex justify-content-center\">\r\n          <h1>{this.props.order.payment.Description}</h1>\r\n        </Row>\r\n        <Row className=\"PayBlock__descr m-0 d-flex justify-content-center\">\r\n          {this.props.order.payment.Receipt\r\n            ? this.props.order.payment.Receipt.Items.map((item, index) => {\r\n                if (this.props.order.payment.Description !== item.Name) {\r\n                  return <div key={index}>{item.Name}</div>\r\n                }\r\n              })\r\n            : null}\r\n        </Row>\r\n        <Row className=\"PayBlock__fieldsList m-0\">\r\n          <Col className=\"PayBlock__fieldsListCont\">\r\n            <div className=\"PayBlock__inputCont\">\r\n              <h3>Ваш E-mail</h3>\r\n              <input\r\n                type=\"email\"\r\n                className={`PayBlock__input ${\r\n                  this.state.formData.inputEmailTouched\r\n                    ? this.state.formData.emailValid\r\n                      ? 'inputValid'\r\n                      : 'inputInvalid'\r\n                    : null\r\n                } `}\r\n                value={this.state.formData.email}\r\n                placeholder=\"example@domain.com\"\r\n                name=\"email\"\r\n                onChange={(event) => this.onEmailChange(event)}\r\n              />\r\n              {this.state.formData.inputEmailTouched && !this.state.formData.emailValid ? (\r\n                <small className=\"RequestFormModal__inputErrorMessage\">Введите корректный email.</small>\r\n              ) : null}\r\n            </div>\r\n\r\n            <div className=\"PayBlock__inputCont\">\r\n              <h3>Номер телефона</h3>\r\n              <ReactInputMask\r\n                mask=\"+7 (999) 999-99-99\"\r\n                className={`PayBlock__input ${\r\n                  this.state.formData.inputPhoneTouched\r\n                    ? this.state.formData.phoneValid\r\n                      ? 'inputValid'\r\n                      : 'inputInvalid'\r\n                    : null\r\n                } `}\r\n                type=\"tel\"\r\n                name=\"phone\"\r\n                placeholder=\"+7 (___) ___-__-__\"\r\n                value={this.state.formData.phone}\r\n                onChange={(event) => this.onPhoneChange(event)}\r\n              />\r\n\r\n              {this.state.formData.inputPhoneTouched && !this.state.formData.phoneValid ? (\r\n                <small className=\"RequestFormModal__inputErrorMessage\">Введите корректный телефонный номер.</small>\r\n              ) : null}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row\r\n          className={`PayBlock__checkboxRow m-0 ${\r\n            this.state.formData.agreeTouched && !this.state.formData.agree ? 'checkBoxInvalid' : ''\r\n          }`}\r\n        >\r\n          <Col\r\n            xs={2}\r\n            className=\"PayBlock__checkbox d-flex justify-content-center pt-2\"\r\n            onClick={() => this.checkboxHandler()}\r\n          >\r\n            <input\r\n              key={this.state.formData.agree.toString()}\r\n              className=\"PayBlock__check\"\r\n              type=\"checkbox\"\r\n              name=\"agree\"\r\n              checked={this.state.formData.agree}\r\n              readOnly={true}\r\n            />\r\n          </Col>\r\n          <Col xs={10} className=\"PayBlock__checkboxTitle\">\r\n            Я ознакомился с{' '}\r\n            <a href=\"#\" target=\"_blank\">\r\n              политикой использования персональных данных\r\n            </a>{' '}\r\n            и с{' '}\r\n            <a href={`${Config.siteURL}/dogovor.pdf`} target=\"_blank\">\r\n              условиями договора на оказание услуг\r\n            </a>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"PayBlock__finalPriceCont d-flex justify-content-between align-items-center\">\r\n          <div className=\"PayBlock__finalPriceTitle\">Стоимость</div>\r\n          <div className=\"PayBlock__finalPrice\">\r\n            <span>{this.props.order.payment.Amount / 100}</span> Р\r\n          </div>\r\n        </Row>\r\n\r\n        {this.state.formData.showFormErrorMessage ? (\r\n          <Row className=\"PayBlock__formErrorMessage d-flex justify-content-center align-items-center\">\r\n            Заполните корректно все поля формы!\r\n          </Row>\r\n        ) : null}\r\n\r\n        {this.state.formData.loading ? (\r\n          <Row className=\"PayBlock__loading d-flex justify-content-center\">\r\n            <div className=\"lds-ellipsis\">\r\n              <div></div>\r\n              <div></div>\r\n              <div></div>\r\n              <div></div>\r\n            </div>\r\n          </Row>\r\n        ) : (\r\n          <Row className=\"PayBlock__buttonCont\" onClick={() => this.formButtonClick()}>\r\n            <div\r\n              className={`PayBlock__button w-100 d-flex justify-content-center align-items-center ${\r\n                this.state.formData.agree ? 'active' : 'disabled'\r\n              }`}\r\n            >\r\n              Купить сейчас\r\n            </div>\r\n          </Row>\r\n        )}\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setShowPaymentModal,\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => {\r\n  const modal = state.modal\r\n  const order = state.order\r\n  return {\r\n    modal,\r\n    order,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PayBlock)\r\n",["192","193"],"C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\SuccessPay\\SuccessPay.tsx",["194","195"],"import React from 'react'\r\nimport { Container, Row } from 'react-bootstrap'\r\nimport Config from '../../Config/Config'\r\nimport { TinkoffPay } from '../../Interfaces/TinkoffPay'\r\nimport './SuccessPay.scss'\r\n\r\ninterface SuccessPayProps {}\r\n\r\ninterface SuccessPayState {\r\n  loading: boolean\r\n  defaultLink: Link\r\n}\r\n\r\ninterface RequestData {\r\n  TerminalKey: string\r\n  PaymentId: string\r\n  Token: string\r\n}\r\n\r\ninterface OrderData {\r\n  email: string\r\n  phone: string\r\n  PaymentId: string\r\n  Token: string\r\n}\r\n\r\ninterface Link {\r\n  name: string\r\n  url: string\r\n  pass: string\r\n}\r\n\r\nclass SuccessPay extends React.Component<SuccessPayProps, SuccessPayState> {\r\n  constructor(props: SuccessPayProps) {\r\n    super(props)\r\n    this.state = {\r\n      loading: true,\r\n      defaultLink: {\r\n        name: '',\r\n        pass: '',\r\n        url: '',\r\n      },\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const storage = localStorage.getItem('payment')\r\n\r\n    if (storage) {\r\n      const payment: TinkoffPay = JSON.parse(storage)\r\n\r\n      this.orderRequest(payment)\r\n    } else {\r\n      // alert(Config.FailURL)\r\n      window.open(Config.FailURL, '_self')\r\n    }\r\n  }\r\n\r\n  orderRequest = async (payment: TinkoffPay): Promise<any> => {\r\n    const url: string = 'https://securepay.tinkoff.ru/v2/Init'\r\n    const headers = {\r\n      'Content-Type': 'application/json',\r\n    }\r\n\r\n    // console.log(payment)\r\n\r\n    try {\r\n      const res = await fetch(url, {\r\n        method: 'POST',\r\n        headers,\r\n        body: JSON.stringify(payment),\r\n      })\r\n\r\n      const requestResult = await res.json()\r\n\r\n      // console.log(requestResult)\r\n\r\n      localStorage.removeItem('payment')\r\n\r\n      if (!requestResult.Success && requestResult.ErrorCode === '8') {\r\n        try {\r\n          const link: Link =\r\n            Config.links.find((link) => link.name === (payment.Receipt ? payment.Receipt.Items[0].Name : '')) ||\r\n            this.state.defaultLink\r\n\r\n          const formData = {\r\n            email: payment.Receipt?.Email,\r\n            phone: payment.Receipt?.Phone,\r\n            name: payment.Description,\r\n            gromovMail: Config.gromovMail,\r\n            pass: link.pass,\r\n            url: link.url,\r\n            siteURL: Config.siteURL,\r\n          }\r\n\r\n          // console.log(formData)\r\n\r\n          const mailUrl: string = '/api/index.php'\r\n\r\n          const mailRes = await fetch(mailUrl, {\r\n            method: 'POST',\r\n            body: JSON.stringify(formData),\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Content-Length': formData.toString().length.toString(),\r\n            },\r\n          })\r\n\r\n          const mailRequestResult = await mailRes.json()\r\n\r\n          console.log(mailRequestResult)\r\n\r\n          if (mailRequestResult !== 'error') {\r\n            console.log('SUCCESS')\r\n          } else {\r\n            console.log('ERROR')\r\n            window.open(Config.FailURL, '_self')\r\n          }\r\n\r\n          this.setState({ loading: false })\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      } else {\r\n        window.open(Config.FailURL, '_self')\r\n      }\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid className=\"SuccessPay p-5 d-flex justify-content-center align-items-center\">\r\n        {this.state.loading ? (\r\n          <div className=\"SuccessPay__loading\">\r\n            <div className=\"lds-ellipsis\">\r\n              <div></div>\r\n              <div></div>\r\n              <div></div>\r\n              <div></div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"SuccessPay__content\">\r\n            <Row className=\"SuccessPay__img m-0 d-flex justify-content-center\">\r\n              <img className=\"img-fluid\" src=\"/img/success.png\" alt=\"\" />\r\n            </Row>\r\n            <Row className=\"SuccessPay__text m-0 pt-5 d-flex justify-content-center\">\r\n              <h3 className=\"text-success text-center\">\r\n                Оплата прошла успешно! Благодарю за покупку! На указанный вами E-mail придет информационное письмо по\r\n                приобретаемому продукту.\r\n              </h3>\r\n              <h3 className=\"text-danger text-center\">Если письмо не попало в почтовый ящик, проверьте папку \"СПАМ\"</h3>\r\n            </Row>\r\n            <Row className=\"SuccessPay__siteLink d-flex justify-content-center pt-3\">\r\n              <a href={`${Config.siteURL}`}>Перейти на сайт</a>\r\n            </Row>\r\n          </div>\r\n        )}\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SuccessPay\r\n","C:\\GitHub\\repositories\\gromov\\src\\Redux\\index.tsx",["196"],"import { applyMiddleware, createStore } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers'\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\n\r\n// let store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\r\nlet store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport default store",["197","198"],"C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\PriceBlock\\PriceBlock.tsx",["199","200"],"C:\\GitHub\\repositories\\gromov\\src\\Redux\\reducers\\app.tsx",[],["201","202"],"C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Certificates\\Certificates.tsx",["203"],"import React from 'react'\r\nimport DashedBorderBlock from '../../../../../SharedComponents/DashedBorderBlock/DashedBorderBlock'\r\nimport { Swiper, SwiperSlide } from 'swiper/react'\r\nimport { Element } from 'react-scroll'\r\n\r\nimport 'swiper/swiper.scss'\r\n\r\nimport './Certificates.scss'\r\nimport { Container, Row } from 'react-bootstrap'\r\n\r\ninterface CertificatesProps {}\r\n\r\ninterface CertificatesState {\r\n  certificates: string[]\r\n}\r\n\r\nclass Certificates extends React.Component<CertificatesProps, CertificatesState> {\r\n  constructor(props: CertificatesProps) {\r\n    super(props)\r\n    this.state = {\r\n      certificates: [\r\n        '1.jpg',\r\n        '2.jpg',\r\n        '3.jpg',\r\n        '4.jpg',\r\n        '5.jpg',\r\n        '6.jpg',\r\n        '7.jpg',\r\n        '8.jpg',\r\n        '9.jpg',\r\n        '10.jpg',\r\n        '11.jpg',\r\n        '12.jpg',\r\n        '13.jpg',\r\n        '14.jpg',\r\n        '15.jpg',\r\n        '16.jpg',\r\n      ],\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Element name=\"Certificates\">\r\n        <Container className=\"Certificates d-block p-0\">\r\n          <Swiper\r\n            slidesPerView={1}\r\n            spaceBetween={10}\r\n            pagination={{ el: '.swiper-pagination', clickable: true }}\r\n            breakpoints={{\r\n              992: {\r\n                slidesPerView: 4,\r\n                spaceBetween: 10,\r\n              },\r\n              768: {\r\n                slidesPerView: 3,\r\n                spaceBetween: 10,\r\n              },\r\n              576: {\r\n                slidesPerView: 2,\r\n                spaceBetween: 10,\r\n              }\r\n            }}\r\n          >\r\n            {this.state.certificates.map((cert, index) => {\r\n              return (\r\n                <SwiperSlide key={index}>\r\n                  <div className=\"Certificates__slide d-flex justify-content-center align-items-center\">\r\n                    <img className=\"img-fluid\" src={`/img/cert/${cert}`} alt=\"\" />\r\n                  </div>\r\n                </SwiperSlide>\r\n              )\r\n            })}\r\n          </Swiper>\r\n          <Row className=\"Certificates__pagination m-0 d-flex justify-content-center pt-5\">\r\n            <div className=\"swiper-pagination\"></div>\r\n          </Row>\r\n        </Container>\r\n\r\n        {/* <Container fluid className=\"Certificates__Mobile d-block d-md-none p-0\">\r\n          <Swiper\r\n            slidesPerView={1}\r\n            centeredSlides={true}\r\n            spaceBetween={10}\r\n            pagination={{ el: '.swiper-paginationMobile', clickable: true }}\r\n          >\r\n            {this.state.certificates.map((cert, index) => {\r\n              return (\r\n                <SwiperSlide key={index}>\r\n                  <div className=\"Certificates__slide d-flex justify-content-center align-items-center\">\r\n                    <img className=\"img-fluid\" src={`/img/cert/${cert}`} alt=\"\" />\r\n                  </div>\r\n                </SwiperSlide>\r\n              )\r\n            })}\r\n          </Swiper>\r\n          <Row className=\"Certificates__pagination m-0 d-flex justify-content-center pt-5\">          \r\n            <div className=\"swiper-paginationMobile\"></div>  \r\n          </Row>\r\n        </Container> */}\r\n      </Element>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Certificates\r\n","C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block10\\Block10.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\RoundButton\\RoundButton.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\IconButton\\IconButton.tsx",["204","205"],"import React from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\nimport './IconButton.scss'\r\n\r\ninterface IconButtonProps {\r\n  width?: string\r\n  height?: string\r\n  icon: string\r\n  textColor: string\r\n  text: string\r\n  bgColor?: string\r\n  shadow?: string\r\n  bold?: any\r\n  borderRadius?: string\r\n  element: number\r\n  clickHandler: (element: number) => void\r\n}\r\n\r\ninterface IconButtonState {}\r\n\r\nclass IconButton extends React.Component<IconButtonProps, IconButtonState> {\r\n  render() {\r\n    return (\r\n      <Container\r\n        fluid\r\n        className=\"IconButton p-0 d-flex justify-content-center align-items-center\"\r\n        style={{\r\n          width: this.props.width ? this.props.width : '',\r\n          height: this.props.height ? this.props.height : '',\r\n          backgroundColor: this.props.bgColor ? this.props.bgColor : '#ffffff',\r\n          boxShadow: this.props.shadow ? this.props.shadow : 'none',\r\n          borderRadius: this.props.borderRadius ? this.props.borderRadius : '0px',\r\n        }}\r\n        onClick={() => this.props.clickHandler(this.props.element)}\r\n      >\r\n          <div className=\"p-4 m-0 d-flex align-items-center justify-content-center\">\r\n            <div className=\"m-0 p-0 pr-2 d-flex align-items-center justify-content-center\">\r\n              <img className=\"img-fluid\" src={this.props.icon} alt=\"\" />\r\n            </div>\r\n            <div\r\n              className=\"IconButton__text m-0 p-0 d-flex align-items-center justify-content-start\"\r\n              style={{\r\n                color: this.props.textColor,\r\n                fontWeight: this.props.bold ? 'bold' : 'normal',\r\n              }}\r\n            >\r\n              {this.props.text}\r\n            </div>\r\n          </div>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default IconButton\r\n","C:\\GitHub\\repositories\\gromov\\src\\Layouts\\AdminLayout\\Pages\\AdminPage\\AdminPage.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\reportWebVitals.ts",[],["206","207"],"C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Second\\Second.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\Redux\\reducers\\modal.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block6\\Block6.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block4\\Block4.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block1\\Block1.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\BeforeAfterBlock\\BeforeAfterBlock.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\MainFooter\\MainFooter.tsx",[],["208","209"],"C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Main.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\MainBody\\MainBody.tsx",[],["210","211"],"C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\HelmetMetaTags\\HelmetMetaTags.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\MirrorHeader\\MirrorHeader.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\Layouts\\AdminLayout\\Pages\\AdminProfile\\AdminProfile.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\Redux\\actions\\order.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block9\\Block9.tsx",["212"],"C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\DashedBorderBlock\\DashedBorderBlock.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\FailedPay\\FailedPay.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\Redux\\reducers\\index.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\Redux\\constants\\ActionTypes.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\App.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\MobileMenu\\MobileMenu.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\AdditionalServices\\AdditionalServices.tsx",["213"],"C:\\GitHub\\repositories\\gromov\\src\\Layouts\\AdminLayout\\AdminLayout.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\Layouts\\MainLayout\\Pages\\Main\\Block5\\Block5.tsx",[],"C:\\GitHub\\repositories\\gromov\\src\\SharedComponents\\Button\\Button.tsx",["214"],{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","replacedBy":"218"},{"ruleId":"215","replacedBy":"219"},{"ruleId":"217","replacedBy":"220"},{"ruleId":"215","replacedBy":"221"},{"ruleId":"217","replacedBy":"222"},{"ruleId":"223","severity":1,"message":"224","line":40,"column":11,"nodeType":"225","messageId":"226","endLine":40,"endColumn":20},{"ruleId":"223","severity":1,"message":"227","line":124,"column":11,"nodeType":"225","messageId":"226","endLine":124,"endColumn":22},{"ruleId":"223","severity":1,"message":"228","line":125,"column":11,"nodeType":"225","messageId":"226","endLine":125,"endColumn":18},{"ruleId":"223","severity":1,"message":"229","line":153,"column":11,"nodeType":"225","messageId":"226","endLine":153,"endColumn":30},{"ruleId":"230","severity":1,"message":"231","line":201,"column":33,"nodeType":"232","messageId":"233","endLine":201,"endColumn":34,"suggestions":"234"},{"ruleId":"230","severity":1,"message":"235","line":201,"column":38,"nodeType":"232","messageId":"233","endLine":201,"endColumn":39,"suggestions":"236"},{"ruleId":"230","severity":1,"message":"231","line":201,"column":54,"nodeType":"232","messageId":"233","endLine":201,"endColumn":55,"suggestions":"237"},{"ruleId":"238","severity":1,"message":"239","line":245,"column":72,"nodeType":"240","messageId":"241","endLine":245,"endColumn":74},{"ruleId":"242","severity":1,"message":"243","line":320,"column":13,"nodeType":"244","endLine":320,"endColumn":41},{"ruleId":"245","severity":1,"message":"246","line":324,"column":55,"nodeType":"247","endLine":324,"endColumn":70},{"ruleId":"215","replacedBy":"248"},{"ruleId":"217","replacedBy":"249"},{"ruleId":"223","severity":1,"message":"250","line":14,"column":11,"nodeType":"225","messageId":"226","endLine":14,"endColumn":22},{"ruleId":"223","severity":1,"message":"224","line":20,"column":11,"nodeType":"225","messageId":"226","endLine":20,"endColumn":20},{"ruleId":"223","severity":1,"message":"251","line":2,"column":10,"nodeType":"225","messageId":"226","endLine":2,"endColumn":29},{"ruleId":"215","replacedBy":"252"},{"ruleId":"217","replacedBy":"253"},{"ruleId":"223","severity":1,"message":"254","line":2,"column":10,"nodeType":"225","messageId":"226","endLine":2,"endColumn":19},{"ruleId":"223","severity":1,"message":"255","line":2,"column":21,"nodeType":"225","messageId":"226","endLine":2,"endColumn":24},{"ruleId":"215","replacedBy":"256"},{"ruleId":"217","replacedBy":"257"},{"ruleId":"223","severity":1,"message":"258","line":2,"column":8,"nodeType":"225","messageId":"226","endLine":2,"endColumn":25},{"ruleId":"223","severity":1,"message":"259","line":2,"column":10,"nodeType":"225","messageId":"226","endLine":2,"endColumn":13},{"ruleId":"223","severity":1,"message":"255","line":2,"column":26,"nodeType":"225","messageId":"226","endLine":2,"endColumn":29},{"ruleId":"215","replacedBy":"260"},{"ruleId":"217","replacedBy":"261"},{"ruleId":"215","replacedBy":"262"},{"ruleId":"217","replacedBy":"263"},{"ruleId":"215","replacedBy":"264"},{"ruleId":"217","replacedBy":"265"},{"ruleId":"223","severity":1,"message":"266","line":9,"column":10,"nodeType":"225","messageId":"226","endLine":9,"endColumn":16},{"ruleId":"223","severity":1,"message":"267","line":6,"column":8,"nodeType":"225","messageId":"226","endLine":6,"endColumn":19},{"ruleId":"223","severity":1,"message":"254","line":2,"column":10,"nodeType":"225","messageId":"226","endLine":2,"endColumn":19},"no-native-reassign",["268"],"no-negated-in-lhs",["269"],["268"],["269"],["268"],["269"],"@typescript-eslint/no-unused-vars","'OrderData' is defined but never used.","Identifier","unusedVar","'url' is assigned a value but never used.","'headers' is assigned a value but never used.","'Payment' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["270","271"],"Unnecessary escape character: \\@.",["272","273"],["274","275"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["268"],["269"],"'RequestData' is defined but never used.","'composeWithDevTools' is defined but never used.",["268"],["269"],"'Container' is defined but never used.","'Row' is defined but never used.",["268"],["269"],"'DashedBorderBlock' is defined but never used.","'Col' is defined but never used.",["268"],["269"],["268"],["269"],["268"],["269"],"'Swiper' is defined but never used.","'RoundButton' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"276","fix":"277","desc":"278"},{"messageId":"279","fix":"280","desc":"281"},{"messageId":"276","fix":"282","desc":"278"},{"messageId":"279","fix":"283","desc":"281"},{"messageId":"276","fix":"284","desc":"278"},{"messageId":"279","fix":"285","desc":"281"},"removeEscape",{"range":"286","text":"287"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"288","text":"289"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"290","text":"287"},{"range":"291","text":"289"},{"range":"292","text":"287"},{"range":"293","text":"289"},[5280,5281],"",[5280,5280],"\\",[5285,5286],[5285,5285],[5301,5302],[5301,5301]]